var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.562,1,0.802]],["body/components/AppComponent.html",[0,0.933,1,1.408,2,1.856,3,0.493,4,0.423,5,1.598,6,1.598,7,1.598,8,1.598,9,0.423,10,2.732,11,1.598,12,2.678,13,2.168,14,3.549,15,2.076,16,4.817,17,2.076,18,4.337,19,0.567,20,1.492,21,2.593,22,0.646,23,0.043,24,2.034,25,1.28,26,1.148,27,1.856,28,3.549,29,3.549,30,1.029,31,3.338,32,0.567,33,0.646,34,0.493,35,0.423,36,3.338,37,2.732,38,2.732,39,2.732,40,2.034,41,3.338,42,1.598,43,2.076,44,2.076,45,1.598,46,2.442,47,1.598,48,1.197,49,1.598,50,0.921,51,1.598,52,0.921,53,1.428,54,1.598,55,0.921,56,1.28,57,1.598,58,0.921,59,1.598,60,0.921,61,1.428,62,1.598,63,1.598,64,1.598,65,0.031,66,0.031]],["title/modules/AppModule.html",[67,1.563,68,1.771]],["body/modules/AppModule.html",[1,1.551,3,0.413,4,0.354,9,0.354,13,1.072,21,2.073,23,0.044,32,0.982,33,0.541,34,0.413,35,0.354,65,0.028,66,0.028,68,3.521,69,1.196,70,1.844,71,2.288,72,2.288,73,2.288,74,2.288,75,2.288,76,2.385,77,2.771,78,2.771,79,2.465,80,2.465,81,2.348,82,1.704,83,1.505,84,2.796,85,2.692,86,3.852,87,2.348,88,3.606,89,2.348,90,3.852,91,2.348,92,1.505,93,2.288,94,2.796,95,2.796,96,3.852,97,1.954,98,2.288,99,2.288,100,3.852,101,1.954,102,2.348,103,1.704,104,2.796,105,2.796,106,1.844,107,1.954,108,2.796,109,2.288,110,2.796,111,2.796,112,1.954,113,1.954,114,2.796,115,3.852,116,2.796,117,2.692,118,1.954,119,2.288,120,2.796,121,2.796,122,2.796,123,2.796]],["title/modules/AppRoutingModule.html",[67,1.563,77,1.563]],["body/modules/AppRoutingModule.html",[3,0.603,4,0.517,9,0.517,23,0.043,32,0.836,33,0.79,34,0.603,35,0.517,65,0.035,66,0.035,69,1.747,77,2.647,87,2.488,89,2.998,124,4.081,125,2.852,126,4.026,127,3.69,128,2.488,129,2.488,130,4.081,131,4.081,132,4.081,133,4.081,134,4.081,135,3.34]],["title/components/ButtonComponent.html",[0,0.562,50,0.802]],["body/components/ButtonComponent.html",[0,0.913,1,0.76,2,1.631,3,0.407,4,0.349,5,1.318,6,1.318,7,1.318,8,1.318,9,0.349,11,1.318,12,2.563,13,2.084,15,1.825,17,1.825,19,0.468,22,0.846,23,0.043,24,2.323,25,1.461,26,1.311,30,1.58,32,0.647,33,0.533,34,0.407,35,0.349,42,1.318,43,1.825,44,1.825,45,1.318,46,2.259,47,1.318,48,1.052,49,1.318,50,1.302,51,1.318,52,0.76,53,1.178,54,1.318,55,0.76,56,1.056,57,1.318,58,0.76,59,1.318,60,0.76,61,1.178,62,1.318,63,1.318,64,1.318,65,0.027,66,0.027,136,2.253,137,1.631,138,2.352,139,3.019,140,4.371,141,3.811,142,1.631,143,4.717,144,2.539,145,3.119,146,4.953,147,3.577,148,3.119,149,4.371,150,1.503,151,3.811,152,2.753,153,2.323,154,2.051,155,3.577,156,2.753,157,2.753,158,1.631,159,2.352,160,2.753,161,3.577,162,3.119,163,1.318,164,2.753,165,1.678,166,2.253,167,2.664,168,2.753,169,1.481,170,1.924,171,2.253,172,2.753,173,2.753,174,1.481,175,1.481,176,3.054,177,2.663,178,2.753,179,2.253,180,2.753]],["title/classes/ConsentsDTO.html",[35,0.368,181,0.999]],["body/classes/ConsentsDTO.html",[3,0.551,4,0.473,9,0.473,19,0.634,20,1.601,22,1.029,23,0.042,24,3.603,30,1.638,34,0.551,35,0.473,48,1.467,65,0.033,66,0.033,150,1.283,181,1.601,182,3.73,183,3.053,184,2.731,185,3.093,186,4.655,187,5.313,188,5.074,189,4.655,190,1.596,191,1.596,192,4.655,193,3.73,194,3.73,195,3.73,196,3.73,197,3.73,198,3.73]],["title/injectables/ConsentsEffects.html",[199,1.391,200,1.771]],["body/injectables/ConsentsEffects.html",[3,0.431,4,0.37,9,0.37,19,0.495,20,1.363,22,0.565,23,0.044,25,1.52,26,1.363,30,1.389,32,0.906,33,0.565,34,0.431,35,0.37,48,0.805,65,0.028,66,0.028,80,2.554,112,2.037,150,1.363,181,1.738,190,1.248,191,1.248,199,1.898,200,2.416,201,2.037,202,2.386,203,2.424,204,2.156,205,2.916,206,4.365,207,2.916,208,5.054,209,4.833,210,3.964,211,4.833,212,3.964,213,4.833,214,4.833,215,3.964,216,1.662,217,4.833,218,3.964,219,4.833,220,2.916,221,3.964,222,3.964,223,3.964,224,3.964,225,2.916,226,2.916,227,1.569,228,2.916,229,2.386,230,2.916,231,2.386,232,1.777,233,2.916,234,1.777,235,1.777,236,2.386,237,1.777,238,1.777,239,2.77]],["title/modules/ConsentsModule.html",[67,1.563,78,1.563]],["body/modules/ConsentsModule.html",[3,0.487,4,0.418,9,0.418,23,0.043,27,1.412,32,0.974,33,0.639,34,0.487,35,0.418,52,1.491,53,1.412,55,1.491,56,1.265,65,0.031,66,0.031,69,1.842,70,2.061,78,3.063,79,2.586,81,2.623,82,2.011,83,1.776,85,3.008,87,2.623,89,2.623,93,2.7,99,2.7,216,1.135,240,2.7,241,2.7,242,3.299,243,3.299,244,3.523,245,4.304,246,2.011,247,3.008,248,2.306,249,3.299,250,2.306,251,3.299,252,4.304,253,2.7,254,4.304,255,3.299,256,3.523,257,2.306,258,4.304,259,3.299,260,4.304,261,3.299]],["title/injectables/ConsentsService.html",[80,1.391,199,1.391]],["body/injectables/ConsentsService.html",[3,0.502,4,0.431,9,0.431,14,2.784,19,0.578,22,0.85,23,0.043,27,2.08,30,1.499,32,0.925,33,0.659,34,0.502,35,0.431,48,1.212,65,0.032,66,0.032,76,1.629,80,2.102,101,2.377,107,2.377,118,3.068,142,1.879,150,1.17,158,1.879,181,1.767,190,1.879,191,1.879,199,2.102,201,2.377,204,2.46,227,1.831,229,2.784,231,2.784,262,2.784,263,4.39,264,3.401,265,5.137,266,3.401,267,3.401,268,3.716,269,4.39,270,3.401,271,2.784,272,3.401,273,3.401,274,2.377,275,2.676,276,3.401,277,3.401,278,4.39,279,3.401,280,3.401]],["title/interfaces/ConsentsState.html",[281,1.563,282,1.771]],["body/interfaces/ConsentsState.html",[3,0.5,4,0.429,9,0.429,19,0.575,20,1.505,22,0.847,23,0.043,32,0.824,34,0.716,65,0.031,66,0.031,106,1.621,129,2.668,153,2.956,154,2.858,181,1.763,203,1.822,204,1.621,206,2.771,216,1.87,232,2.063,234,2.063,235,2.063,237,2.063,238,2.063,281,1.822,282,2.956,283,2.366,284,2.366,285,4.711,286,3.582,287,2.49,288,3.059,289,2.063,290,2.771,291,3.059,292,2.771,293,2.771,294,2.771,295,2.771,296,3.059,297,2.771]],["title/modules/CoreModule.html",[67,1.563,79,1.391]],["body/modules/CoreModule.html",[3,0.484,4,0.415,9,0.415,23,0.043,32,0.946,33,0.634,34,0.484,35,0.415,50,1.591,58,1.591,60,1.591,65,0.031,66,0.031,67,1.763,69,1.402,70,2.052,79,2.774,81,2.612,82,1.997,83,1.763,85,2.994,87,1.997,89,2.612,126,3.507,128,1.997,135,3.507,244,3.507,246,1.997,256,3.507,257,2.29,298,2.682,299,2.682,300,2.682,301,3.277,302,4.285,303,3.277,304,3.277,305,3.277,306,2.29,307,3.277,308,3.277,309,3.277]],["title/components/GiveConsentComponent.html",[0,0.562,52,0.802]],["body/components/GiveConsentComponent.html",[0,0.719,1,0.466,2,1.136,3,0.249,4,0.214,5,0.809,6,0.809,7,0.809,8,0.809,9,0.214,11,0.809,12,2.223,13,1.78,15,1.271,17,1.271,19,0.287,20,0.913,21,1.999,22,0.719,23,0.043,25,0.648,26,0.581,27,1.834,30,1.432,32,0.811,33,0.327,34,0.249,35,0.214,37,1.382,38,1.382,39,1.382,40,1.029,42,0.809,43,1.271,44,1.271,45,0.809,46,1.779,47,0.809,48,1.398,49,0.809,50,0.466,51,0.809,52,1.025,53,2.091,54,0.809,55,0.466,56,1.018,57,0.809,58,0.466,59,0.809,60,0.466,61,0.723,62,0.809,63,0.809,64,0.809,65,0.019,66,0.019,91,1.029,92,0.909,106,0.809,128,1.029,129,1.029,137,1.136,138,1.764,139,1.029,142,1.136,144,1.999,147,2.683,150,0.913,153,1.617,154,1.764,158,1.728,159,1.999,163,1.933,169,0.909,174,0.909,175,0.909,181,0.913,184,0.909,185,2.979,190,1.403,191,1.403,203,0.909,216,0.913,232,1.029,239,2.596,246,1.029,248,3.337,275,1.617,287,0.723,291,3.133,296,1.18,310,3.908,311,1.382,312,3.278,313,2.654,314,2.612,315,3.278,316,2.654,317,2.654,318,3.715,319,3.715,320,1.689,321,3.715,322,3.669,323,4.483,324,2.683,325,2.654,326,2.654,327,2.654,328,1.689,329,2.683,330,2.654,331,1.689,332,1.689,333,1.689,334,1.689,335,3.278,336,1.689,337,1.382,338,1.689,339,1.689,340,1.382,341,1.689,342,1.689,343,1.382,344,1.689,345,1.689,346,4.038,347,1.689,348,1.689,349,1.382,350,1.382,351,1.382,352,1.689,353,1.382,354,1.689,355,2.654,356,2.654,357,2.654,358,1.382,359,1.689,360,3.278,361,3.278,362,1.689,363,3.278,364,3.278,365,2.654,366,1.689,367,2.172,368,1.18,369,1.689,370,1.382,371,1.689,372,1.689,373,1.689,374,1.689,375,1.689,376,1.689,377,1.689,378,1.689,379,1.689,380,1.689,381,1.689,382,1.382,383,1.689,384,1.689,385,1.029,386,1.689,387,1.689,388,1.689,389,3.04,390,2.654,391,2.172,392,2.172,393,2.172,394,2.654,395,1.854,396,2.172,397,1.854,398,1.854,399,1.854,400,2.172,401,1.854,402,1.854,403,1.854,404,1.854,405,1.854,406,1.617,407,2.683,408,3.278,409,1.689,410,1.382,411,1.382,412,1.18,413,1.689,414,1.689,415,1.689,416,1.029,417,1.854,418,1.689]],["title/components/ListConsentsComponent.html",[0,0.562,55,0.802]],["body/components/ListConsentsComponent.html",[0,0.674,1,0.416,2,1.036,3,0.222,4,0.191,5,0.721,6,0.721,7,0.721,8,0.721,9,0.191,11,0.721,12,2.134,13,1.709,15,1.16,17,1.16,19,0.256,20,0.833,21,1.874,22,0.952,23,0.043,24,1.476,25,1.563,26,1.402,27,0.644,30,1.581,32,0.82,33,0.292,34,0.222,35,0.191,40,2.484,42,0.721,43,1.16,44,1.16,45,0.721,46,1.667,47,0.721,48,1.357,49,0.721,50,0.416,51,0.721,52,0.416,53,0.644,54,0.721,55,0.961,56,1.81,57,0.721,58,0.416,59,0.721,60,0.416,61,0.644,62,0.721,63,0.721,64,0.721,65,0.017,66,0.017,91,0.918,92,0.81,106,0.721,137,1.036,138,1.635,142,1.036,144,1.874,150,0.518,158,1.744,159,2.306,163,0.721,165,0.918,167,0.918,169,1.635,174,1.635,175,1.874,176,1.052,177,1.052,181,0.833,184,1.874,185,2.484,190,1.49,191,1.49,204,1.16,216,1.533,227,0.81,232,0.918,239,2.433,250,3.621,253,1.232,268,2.123,274,1.052,287,0.644,314,3.286,322,3.336,324,2.487,337,1.232,343,1.232,368,2.123,385,2.803,406,1.852,410,2.487,411,2.487,412,1.052,416,1.852,417,2.849,419,4.241,420,1.232,421,3.039,422,3.039,423,2.422,424,3.039,425,3.039,426,3.039,427,2.487,428,2.487,429,3.039,430,2.123,431,3.482,432,2.422,433,2.422,434,3.482,435,2.422,436,1.506,437,2.422,438,1.506,439,1.506,440,2.422,441,1.506,442,2.422,443,1.506,444,1.506,445,2.422,446,1.506,447,4.721,448,1.506,449,1.506,450,1.506,451,1.506,452,3.336,453,1.852,454,1.506,455,1.476,456,1.506,457,2.122,458,1.506,459,1.506,460,1.506,461,1.506,462,1.232,463,1.506,464,1.506,465,1.506,466,1.506,467,1.506,468,1.506,469,1.506,470,1.232,471,1.506,472,1.506,473,1.506,474,1.506,475,3.039,476,2.422,477,1.506,478,1.232,479,1.052,480,3.482,481,1.506,482,1.506,483,1.232,484,3.123,485,1.232,486,0.918,487,1.506,488,1.052,489,1.506,490,1.506,491,1.982,492,1.506,493,1.506,494,2.422,495,2.422,496,1.982,497,2.422,498,3.949,499,2.422,500,2.422,501,2.422,502,1.506,503,4.076,504,3.336]],["title/interceptors/MockHttpInterceptor.html",[505,2.377,506,1.771]],["body/interceptors/MockHttpInterceptor.html",[3,0.242,4,0.208,9,0.208,19,0.279,20,0.892,22,0.623,23,0.044,25,0.629,26,0.564,30,0.992,32,0.621,33,0.318,34,0.242,35,0.208,48,0.716,65,0.019,66,0.019,101,1.146,118,1.146,119,1.343,137,0.702,142,1.11,150,0.564,158,0.702,181,1.106,184,3.01,190,1.11,191,1.11,199,1.242,216,1.456,227,0.883,268,2.248,271,1.343,274,1.146,275,2.427,314,1.96,395,3.841,397,3.799,398,3.799,399,1.812,401,3.877,402,3.877,403,3.877,430,1.146,470,2.123,486,1.96,506,1.581,507,2.554,508,1.343,509,3.216,510,1.64,511,4.233,512,1.64,513,2.593,514,3.655,515,3.655,516,1.64,517,2.593,518,2.593,519,2.593,520,2.593,521,5.275,522,5.363,523,2.593,524,3.655,525,2.593,526,2.593,527,3.655,528,5.363,529,4.233,530,2.593,531,4.233,532,2.593,533,4.233,534,2.593,535,2.593,536,2.593,537,2.593,538,2.593,539,3.655,540,2.593,541,2.593,542,2.593,543,2.593,544,2.593,545,1.64,546,1.64,547,2.593,548,1.64,549,2.593,550,2.992,551,2.593,552,2.593,553,1.64,554,2.593,555,1.64,556,2.593,557,2.593,558,2.593,559,2.593,560,2.593,561,2.593,562,1.64,563,2.593,564,1.64]],["title/components/PaginationComponent.html",[0,0.562,58,0.802]],["body/components/PaginationComponent.html",[0,0.746,1,0.499,2,1.198,3,0.267,4,0.229,5,0.866,6,0.866,7,0.866,8,0.866,9,0.229,11,0.866,12,2.275,13,1.822,15,1.34,17,1.34,19,0.307,20,0.963,22,0.965,23,0.043,25,1.691,26,1.516,30,1.682,32,0.476,33,0.35,34,0.267,35,0.229,42,0.866,43,1.34,44,1.34,45,0.866,46,1.846,47,0.866,48,0.945,49,0.866,50,0.499,51,0.866,52,0.499,53,0.774,54,0.866,55,0.499,56,0.694,57,0.866,58,1.064,59,0.866,60,0.499,61,0.774,62,0.866,63,0.866,64,0.866,65,0.02,66,0.02,137,1.198,138,1.843,139,1.706,142,1.198,144,2.075,145,2.291,148,2.291,150,1.178,153,2.35,154,2.075,155,4.078,158,2.033,159,2.557,161,3.155,162,3.412,163,1.64,165,1.102,167,2.35,169,1.506,170,1.264,174,0.973,175,0.973,190,0.774,191,0.774,275,1.102,314,3.139,368,1.956,385,2.803,404,1.956,405,1.264,406,1.102,416,1.102,427,2.803,428,2.803,430,2.393,452,3.991,453,2.803,455,1.706,457,2.896,478,1.48,479,1.264,484,3.155,486,1.706,488,2.914,491,1.48,498,1.48,565,1.48,566,3.424,567,2.799,568,3.424,569,3.424,570,3.424,571,3.424,572,3.855,573,3.855,574,2.799,575,3.424,576,3.424,577,3.763,578,3.424,579,3.424,580,3.424,581,2.799,582,1.809,583,1.809,584,1.809,585,1.809,586,1.809,587,1.809,588,1.809,589,1.809,590,1.809,591,1.809,592,1.809,593,1.809,594,1.809,595,1.809,596,1.809,597,1.809,598,1.809,599,1.809,600,1.809,601,1.48,602,4.598,603,1.809,604,1.809,605,4.409,606,1.809,607,3.424,608,3.855,609,1.809,610,1.48,611,1.48,612,1.809,613,1.809,614,1.809,615,2.799,616,2.799,617,1.48,618,2.291,619,1.809,620,1.809]],["title/components/SideNavComponent.html",[0,0.562,60,0.802]],["body/components/SideNavComponent.html",[0,0.918,1,0.769,2,1.644,3,0.411,4,0.353,5,1.333,6,1.333,7,1.333,8,1.333,9,0.353,11,1.333,12,2.571,13,2.059,15,1.839,17,1.839,19,0.473,22,0.539,23,0.043,27,1.644,30,1.184,32,0.653,33,0.539,34,0.411,35,0.353,40,2.68,42,1.333,43,1.839,44,1.839,45,1.333,46,2.27,47,1.333,48,1.06,49,1.333,50,0.769,51,1.333,52,0.769,53,1.882,54,1.333,55,0.769,56,1.473,57,1.333,58,0.769,59,1.333,60,1.308,61,2.36,62,2.27,63,1.333,64,1.333,65,0.028,66,0.028,137,1.644,138,2.367,142,1.644,144,2.551,150,1.512,158,1.192,159,2.067,165,1.697,166,3.144,167,2.341,169,2.067,170,1.946,171,2.279,174,1.499,175,1.499,176,3.073,177,2.684,179,2.279,216,1.321,306,3.073,404,1.946,405,1.946,406,1.697,416,1.697,417,1.946,457,2.68,504,2.279,610,2.279,611,2.279,618,2.279,621,3.599,622,2.279,623,4.397,624,3.841,625,2.785,626,2.785,627,2.785,628,3.841,629,2.785,630,2.785,631,2.785,632,2.785,633,2.785,634,2.785,635,2.785,636,3.841,637,2.785,638,2.785,639,2.785,640,2.785,641,2.785,642,2.785,643,2.785,644,2.785,645,2.785,646,2.785]],["title/interfaces/State.html",[281,1.563,287,1.243]],["body/interfaces/State.html",[3,0.588,4,0.504,9,0.504,19,0.676,20,1.666,22,0.77,23,0.043,32,0.887,34,0.771,65,0.035,66,0.035,76,1.905,102,2.425,103,2.425,106,1.905,107,2.781,129,2.952,281,2.141,283,2.781,287,2.073,289,3.453,647,2.781,648,5.222,649,3.964,650,3.964,651,3.979,652,3.257]],["title/coverage.html",[653,2.763]],["body/coverage.html",[0,1.001,1,0.782,9,0.359,10,2.32,22,0.549,23,0.043,35,0.359,50,0.782,52,0.782,55,0.782,58,0.782,60,0.782,65,0.028,66,0.028,76,2.125,80,1.357,102,1.728,103,1.728,113,1.981,117,1.981,125,1.981,136,2.32,163,1.357,181,0.975,183,2.32,199,1.862,200,1.728,202,2.32,203,1.526,204,1.862,234,1.728,235,1.728,237,1.728,238,1.728,247,1.981,248,1.981,250,1.981,262,2.32,281,2.093,282,1.728,284,3.102,287,1.213,288,1.981,289,1.728,306,1.981,310,2.32,311,2.32,412,1.981,419,2.32,420,2.32,457,3.629,505,2.32,506,1.728,507,2.717,508,2.32,565,2.32,621,2.32,622,2.32,647,3.102,653,1.981,654,2.835,655,2.835,656,2.32,657,2.835,658,3.888,659,2.32,660,5.808,661,5.808,662,2.835,663,2.835,664,2.835,665,3.888,666,2.835,667,2.32,668,4.438,669,3.613,670,2.32,671,3.182,672,2.32,673,2.32,674,2.32,675,2.32,676,2.835]],["title/dependencies.html",[70,1.671,677,1.99]],["body/dependencies.html",[23,0.043,33,0.748,65,0.034,66,0.034,70,1.849,88,3.892,91,2.898,92,2.559,97,2.698,98,3.16,106,2.277,109,3.16,112,2.698,128,2.353,227,2.078,246,2.353,257,2.698,678,3.861,679,5.801,680,3.861,681,4.755,682,3.861,683,3.861,684,3.861,685,3.861,686,3.861,687,5.153,688,3.861,689,3.861,690,3.861,691,3.861,692,3.861,693,3.861]],["title/miscellaneous/enumerations.html",[694,1.482,695,2.857]],["body/miscellaneous/enumerations.html",[19,0.665,23,0.042,26,1.999,65,0.034,66,0.034,236,3.925,340,3.925,349,3.203,350,3.203,351,3.203,395,2.735,396,3.203,397,2.735,398,2.735,399,2.735,400,3.203,401,2.735,402,2.735,403,2.735,669,2.735,694,2.385,695,3.203,696,3.203,697,3.914,698,4.795,699,5.643,700,4.795,701,4.795,702,4.795,703,4.795,704,4.795,705,3.914]],["title/index.html",[19,0.413,706,2.431,707,2.431]],["body/index.html",[0,0.795,1,0.678,4,0.311,13,1.575,21,1.321,23,0.043,27,1.919,28,3.361,29,2.877,48,1.134,50,0.678,52,0.678,55,0.678,56,1.575,58,0.678,60,0.678,61,1.05,65,0.025,66,0.025,83,1.321,97,3.553,137,1.05,139,2.892,163,1.175,184,1.321,185,2.143,216,0.844,329,2.009,353,2.877,358,2.009,367,2.009,370,3.67,382,2.877,385,3.314,389,2.009,391,2.009,392,2.009,393,2.009,407,3.361,453,1.496,455,1.496,462,2.009,479,1.715,483,3.361,485,2.009,486,2.503,488,2.457,496,2.009,550,2.877,577,2.009,601,2.009,617,3.361,653,1.715,656,2.009,677,2.009,708,2.455,709,2.455,710,2.455,711,2.455,712,2.455,713,2.455,714,2.455,715,2.455,716,2.455,717,2.455,718,2.455,719,3.515,720,4.746,721,2.455,722,2.455,723,2.455,724,2.455,725,2.455,726,2.455,727,2.455,728,2.455,729,2.455,730,4.107,731,4.107,732,2.455,733,2.455,734,2.455,735,2.455,736,2.455,737,2.455,738,3.515,739,4.107,740,4.746,741,3.515,742,3.515,743,3.515,744,2.455,745,2.455,746,2.455,747,2.455,748,4.938,749,4.107,750,3.515,751,3.515,752,3.515,753,2.455,754,2.455,755,2.455,756,2.455,757,2.455,758,3.515,759,2.455,760,2.455,761,2.455,762,2.455,763,2.455,764,2.455,765,3.515,766,2.455,767,2.455,768,2.455,769,2.455,770,2.455,771,2.455,772,2.455,773,2.455,774,2.455,775,2.455,776,2.455,777,2.455,778,2.455,779,4.938,780,2.455,781,2.455,782,2.455,783,2.455,784,3.515,785,2.455,786,2.455,787,2.455,788,2.455,789,4.107,790,2.455,791,3.515,792,3.515,793,2.455,794,1.715,795,2.455]],["title/modules.html",[69,1.692]],["body/modules.html",[23,0.037,65,0.037,66,0.037,68,2.671,69,1.875,77,2.358,78,2.358,79,2.098,92,2.928,796,5.441,797,5.441,798,5.611,799,4.382,800,4.382]],["title/overview.html",[794,2.763]],["body/overview.html",[1,1.52,2,1.418,23,0.042,35,0.42,50,1.52,52,1.325,55,1.325,58,1.52,60,1.52,65,0.031,66,0.031,68,3.566,69,1.418,70,2.067,71,2.713,72,2.713,73,2.713,74,2.713,75,2.713,76,2.299,77,2.584,78,3.038,79,2.778,80,2.299,81,2.631,82,2.02,83,1.784,201,2.316,240,2.713,241,2.713,283,2.316,298,2.713,299,2.713,300,2.713,453,2.631,455,2.631,794,2.316,801,3.315,802,3.315,803,3.315]],["title/routes.html",[127,2.763]],["body/routes.html",[23,0.038,65,0.038,66,0.038,127,3.251]],["title/miscellaneous/variables.html",[694,1.482,804,2.857]],["body/miscellaneous/variables.html",[19,0.417,22,1.007,23,0.044,25,2.188,26,1.963,65,0.025,66,0.025,76,2.364,102,2.143,103,2.143,113,2.457,117,2.457,125,2.457,154,2.736,200,1.496,203,1.892,204,2.147,216,1.209,234,2.143,235,2.143,237,2.143,238,2.143,247,2.457,282,1.496,284,1.715,285,4.161,286,2.009,287,2.351,288,2.87,289,2.503,290,2.009,291,3.134,292,2.009,293,2.009,294,2.009,295,2.009,296,2.457,297,2.009,506,1.496,507,1.715,647,1.715,649,2.009,650,2.009,652,2.009,659,2.009,667,2.009,669,1.715,670,2.009,671,2.009,672,2.877,673,2.009,674,2.009,675,2.009,694,1.496,696,4.041,804,2.009,805,3.515,806,3.515,807,2.455,808,4.484,809,2.455,810,2.455,811,2.455,812,4.938,813,2.455,814,4.746,815,2.455,816,2.455,817,2.455,818,2.455,819,2.455,820,2.455,821,2.455,822,2.455,823,2.455,824,2.455,825,4.107,826,4.107,827,4.107,828,4.938,829,2.455,830,2.455,831,2.455,832,2.455]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"modules/ConsentsModule.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"interfaces/State.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":457,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["0.2rem",{"_index":504,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/SideNavComponent.html":{}}}],["0.3rem",{"_index":418,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["0.8rem",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":453,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"index.html":{},"overview.html":{}}}],["1.109",{"_index":759,"title":{},"body":{"index.html":{}}}],["1.415",{"_index":757,"title":{},"body":{"index.html":{}}}],["10.0.0",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":414,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["12.1.1",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["12.2.13",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["13.0.1",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["130/132",{"_index":778,"title":{},"body":{"index.html":{}}}],["143/146",{"_index":769,"title":{},"body":{"index.html":{}}}],["14:20:35",{"_index":760,"title":{},"body":{"index.html":{}}}],["159",{"_index":613,"title":{},"body":{"components/PaginationComponent.html":{}}}],["15px",{"_index":502,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["18",{"_index":178,"title":{},"body":{"components/ButtonComponent.html":{}}}],["184",{"_index":636,"title":{},"body":{"components/SideNavComponent.html":{}}}],["190",{"_index":614,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1px",{"_index":416,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["2",{"_index":455,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"index.html":{},"overview.html":{}}}],["2.2.0",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":642,"title":{},"body":{"components/SideNavComponent.html":{}}}],["200",{"_index":558,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["239",{"_index":633,"title":{},"body":{"components/SideNavComponent.html":{}}}],["248",{"_index":634,"title":{},"body":{"components/SideNavComponent.html":{}}}],["27",{"_index":766,"title":{},"body":{"index.html":{}}}],["3",{"_index":607,"title":{},"body":{"components/PaginationComponent.html":{}}}],["30/32",{"_index":775,"title":{},"body":{"index.html":{}}}],["4",{"_index":801,"title":{},"body":{"overview.html":{}}}],["4.5.0",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":646,"title":{},"body":{"components/SideNavComponent.html":{}}}],["5px",{"_index":171,"title":{},"body":{"components/ButtonComponent.html":{},"components/SideNavComponent.html":{}}}],["6",{"_index":802,"title":{},"body":{"overview.html":{}}}],["6.6.7",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["73.27",{"_index":771,"title":{},"body":{"index.html":{}}}],["80",{"_index":409,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["80vh",{"_index":631,"title":{},"body":{"components/SideNavComponent.html":{}}}],["85/116",{"_index":772,"title":{},"body":{"index.html":{}}}],["93.75",{"_index":774,"title":{},"body":{"index.html":{}}}],["97.94",{"_index":768,"title":{},"body":{"index.html":{}}}],["98.48",{"_index":777,"title":{},"body":{"index.html":{}}}],["_aggrements",{"_index":188,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["_aggrements:string",{"_index":195,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["_email",{"_index":187,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["_name",{"_index":192,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["actionreducermap",{"_index":649,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":206,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{}}}],["active",{"_index":643,"title":{},"body":{"components/SideNavComponent.html":{}}}],["actual_component",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["add",{"_index":382,"title":{},"body":{"components/GiveConsentComponent.html":{},"index.html":{}}}],["add_consents",{"_index":698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add_consents_fail",{"_index":701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add_consents_success",{"_index":700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["addconsents",{"_index":203,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addconsentsfail",{"_index":234,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addconsentssuccess",{"_index":235,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addconsentssuccess({payload",{"_index":215,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["address",{"_index":393,"title":{},"body":{"components/GiveConsentComponent.html":{},"index.html":{}}}],["ads",{"_index":399,"title":{},"body":{"components/GiveConsentComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["ads\",\"contribute",{"_index":522,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["afterviewinit",{"_index":459,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["aggrement",{"_index":750,"title":{},"body":{"index.html":{}}}],["aggrement1",{"_index":349,"title":{},"body":{"components/GiveConsentComponent.html":{},"miscellaneous/enumerations.html":{}}}],["aggrement2",{"_index":350,"title":{},"body":{"components/GiveConsentComponent.html":{},"miscellaneous/enumerations.html":{}}}],["aggrement3",{"_index":351,"title":{},"body":{"components/GiveConsentComponent.html":{},"miscellaneous/enumerations.html":{}}}],["aggrements",{"_index":184,"title":{},"body":{"classes/ConsentsDTO.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"index.html":{}}}],["agree",{"_index":394,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["agreement",{"_index":415,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["agrees",{"_index":712,"title":{},"body":{"index.html":{}}}],["align",{"_index":405,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["allows",{"_index":709,"title":{},"body":{"index.html":{}}}],["angular",{"_index":791,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":257,"title":{},"body":{"modules/ConsentsModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConsentsService.html":{},"interceptors/MockHttpInterceptor.html":{}}}],["angular/compiler",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"injectables/ConsentsEffects.html":{},"modules/ConsentsModule.html":{},"injectables/ConsentsService.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":246,"title":{},"body":{"modules/ConsentsModule.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":303,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/material/checkbox",{"_index":259,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["angular/material/input",{"_index":261,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["angular/material/paginator",{"_index":255,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["angular/material/table",{"_index":253,"title":{},"body":{"modules/ConsentsModule.html":{},"components/ListConsentsComponent.html":{}}}],["angular/platform",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"dependencies.html":{}}}],["anonymous",{"_index":401,"title":{},"body":{"components/GiveConsentComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["app.component",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["appmodule",{"_index":68,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":77,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":734,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":725,"title":{},"body":{"index.html":{}}}],["available",{"_index":800,"title":{},"body":{"modules.html":{}}}],["background",{"_index":166,"title":{},"body":{"components/ButtonComponent.html":{},"components/SideNavComponent.html":{}}}],["black",{"_index":175,"title":{},"body":{"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["blue",{"_index":618,"title":{},"body":{"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["body",{"_index":559,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["bold",{"_index":180,"title":{},"body":{"components/ButtonComponent.html":{}}}],["boolean",{"_index":153,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/PaginationComponent.html":{}}}],["bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":169,"title":{},"body":{"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["border:1px",{"_index":173,"title":{},"body":{"components/ButtonComponent.html":{}}}],["branches",{"_index":770,"title":{},"body":{"index.html":{}}}],["brown",{"_index":542,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["browse",{"_index":798,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":370,"title":{},"body":{"components/GiveConsentComponent.html":{},"index.html":{}}}],["button",{"_index":139,"title":{},"body":{"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/PaginationComponent.html":{},"index.html":{}}}],["button'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["button.component.html",{"_index":141,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":140,"title":{},"body":{"components/ButtonComponent.html":{}}}],["buttoncomponent",{"_index":50,"title":{"components/ButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["capabilities",{"_index":787,"title":{},"body":{"index.html":{}}}],["caption",{"_index":146,"title":{},"body":{"components/ButtonComponent.html":{}}}],["catcherror",{"_index":228,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["catcherror((error",{"_index":217,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["cell",{"_index":501,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["center",{"_index":406,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["change",{"_index":483,"title":{},"body":{"components/ListConsentsComponent.html":{},"index.html":{}}}],["changeperpage",{"_index":578,"title":{},"body":{"components/PaginationComponent.html":{}}}],["check",{"_index":358,"title":{},"body":{"components/GiveConsentComponent.html":{},"index.html":{}}}],["choice",{"_index":783,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/ConsentsDTO.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"modules/ConsentsModule.html":{},"injectables/ConsentsService.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":182,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["cli",{"_index":792,"title":{},"body":{"index.html":{}}}],["click",{"_index":143,"title":{},"body":{"components/ButtonComponent.html":{}}}],["client",{"_index":717,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_consentsmodule",{"_index":240,"title":{},"body":{"modules/ConsentsModule.html":{},"overview.html":{}}}],["cluster_consentsmodule_declarations",{"_index":241,"title":{},"body":{"modules/ConsentsModule.html":{},"overview.html":{}}}],["cluster_consentsmodule_imports",{"_index":242,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["cluster_coremodule",{"_index":298,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":299,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":300,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cms",{"_index":699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code",{"_index":728,"title":{},"body":{"index.html":{}}}],["collected",{"_index":628,"title":{},"body":{"components/SideNavComponent.html":{}}}],["collection",{"_index":708,"title":{},"body":{"index.html":{}}}],["color",{"_index":167,"title":{},"body":{"components/ButtonComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["column",{"_index":503,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["columns",{"_index":467,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["command",{"_index":784,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":256,"title":{},"body":{"modules/ConsentsModule.html":{},"modules/CoreModule.html":{}}}],["completed",{"_index":767,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"overview.html":{}}}],["components/pagination/pagination.component",{"_index":304,"title":{},"body":{"modules/CoreModule.html":{}}}],["components/side",{"_index":305,"title":{},"body":{"modules/CoreModule.html":{}}}],["consent",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/ConsentsModule.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["consent'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["consent.component",{"_index":249,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["consent.component.html",{"_index":313,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.scss",{"_index":312,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts",{"_index":311,"title":{},"body":{"components/GiveConsentComponent.html":{},"coverage.html":{}}}],["consent.component.ts:19",{"_index":336,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts:20",{"_index":325,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts:37",{"_index":332,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts:42",{"_index":333,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts:53",{"_index":331,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts:60",{"_index":328,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts:67",{"_index":334,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent/give",{"_index":248,"title":{},"body":{"modules/ConsentsModule.html":{},"components/GiveConsentComponent.html":{},"coverage.html":{}}}],["consentactiontypes",{"_index":236,"title":{},"body":{"injectables/ConsentsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["consentactiontypes.add_consents",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentactiontypes.add_consents_fail",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentactiontypes.add_consents_success",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentactiontypes.get_consents",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentactiontypes.get_consents_fail",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentactiontypes.get_consents_success",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentapi",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consents",{"_index":216,"title":{},"body":{"injectables/ConsentsEffects.html":{},"modules/ConsentsModule.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/SideNavComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["consents'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["consents.component",{"_index":251,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["consents.component.html",{"_index":423,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.scss",{"_index":422,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts",{"_index":420,"title":{},"body":{"components/ListConsentsComponent.html":{},"coverage.html":{}}}],["consents.component.ts:21",{"_index":448,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:22",{"_index":451,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:23",{"_index":449,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:24",{"_index":450,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:26",{"_index":458,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:27",{"_index":454,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:28",{"_index":456,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:30",{"_index":437,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:35",{"_index":439,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:50",{"_index":438,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:56",{"_index":443,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:62",{"_index":446,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:68",{"_index":441,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents.component.ts:74",{"_index":444,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consents/consents.modules",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["consents/list",{"_index":250,"title":{},"body":{"modules/ConsentsModule.html":{},"components/ListConsentsComponent.html":{},"coverage.html":{}}}],["consentsdata",{"_index":424,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consentsdto",{"_index":181,"title":{"classes/ConsentsDTO.html":{}},"body":{"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"coverage.html":{}}}],["consentsdto:consentsdto",{"_index":372,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consentseffects",{"_index":200,"title":{"injectables/ConsentsEffects.html":{}},"body":{"injectables/ConsentsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsenum",{"_index":340,"title":{},"body":{"components/GiveConsentComponent.html":{},"miscellaneous/enumerations.html":{}}}],["consentsenum.aggrement1",{"_index":377,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consentsenum.aggrement2",{"_index":379,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consentsenum.aggrement3",{"_index":381,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consentslist",{"_index":672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsmodule",{"_index":78,"title":{"modules/ConsentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConsentsModule.html":{},"modules.html":{},"overview.html":{}}}],["consentspaginatedata",{"_index":425,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["consentsreducer",{"_index":289,"title":{},"body":{"interfaces/ConsentsState.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsreducer.consentsreducer",{"_index":652,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["consentsreducer.consentsstate",{"_index":648,"title":{},"body":{"interfaces/State.html":{}}}],["consentsroutingmodule",{"_index":247,"title":{},"body":{"modules/ConsentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsservice",{"_index":80,"title":{"injectables/ConsentsService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"coverage.html":{},"overview.html":{}}}],["consentsstate",{"_index":282,"title":{"interfaces/ConsentsState.html":{}},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentssub",{"_index":426,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["const",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"interfaces/State.html":{}}}],["constructor",{"_index":150,"title":{},"body":{"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["constructor(_name",{"_index":186,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["constructor(actions",{"_index":205,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["constructor(fb",{"_index":320,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["constructor(http",{"_index":264,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["constructor(injector",{"_index":510,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["constructor(private",{"_index":274,"title":{},"body":{"injectables/ConsentsService.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{}}}],["constructor(store",{"_index":436,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["container",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/GiveConsentComponent.html":{}}}],["content",{"_index":411,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{}}}],["contribute",{"_index":400,"title":{},"body":{"components/GiveConsentComponent.html":{},"miscellaneous/enumerations.html":{}}}],["control",{"_index":360,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["control?.haserror(\"email",{"_index":366,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["control?.haserror(\"required",{"_index":362,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["control?.markastouched",{"_index":363,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["controls",{"_index":387,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["controls/button/button.component",{"_index":308,"title":{},"body":{"modules/CoreModule.html":{}}}],["core",{"_index":309,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.modules",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsentsModule.html":{}}}],["coremodule",{"_index":79,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConsentsModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":653,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":748,"title":{},"body":{"index.html":{}}}],["createaction",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createeffect",{"_index":208,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["createfeatureselector(\"consentsreducer",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":286,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["createselector(consentslist",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpage",{"_index":427,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{}}}],["cursor",{"_index":610,"title":{},"body":{"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["data",{"_index":550,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{},"index.html":{}}}],["davis",{"_index":531,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["declarations",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsentsModule.html":{},"modules/CoreModule.html":{}}}],["decoration",{"_index":615,"title":{},"body":{"components/PaginationComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/ConsentsEffects.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["dependencies",{"_index":70,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ConsentsModule.html":{},"modules/CoreModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":722,"title":{},"body":{"index.html":{}}}],["development",{"_index":718,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["directive",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["directives",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":732,"title":{},"body":{"index.html":{}}}],["directory",{"_index":737,"title":{},"body":{"index.html":{}}}],["disable",{"_index":749,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":619,"title":{},"body":{"components/PaginationComponent.html":{}}}],["disablenext",{"_index":568,"title":{},"body":{"components/PaginationComponent.html":{}}}],["disableprev",{"_index":569,"title":{},"body":{"components/PaginationComponent.html":{}}}],["disableprevnextbutton",{"_index":571,"title":{},"body":{"components/PaginationComponent.html":{}}}],["display",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/GiveConsentComponent.html":{}}}],["displays",{"_index":716,"title":{},"body":{"index.html":{}}}],["dist",{"_index":736,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["down",{"_index":747,"title":{},"body":{"index.html":{}}}],["dto",{"_index":371,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["dto/consentsdto",{"_index":271,"title":{},"body":{"injectables/ConsentsService.html":{},"interceptors/MockHttpInterceptor.html":{}}}],["dynamic",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":781,"title":{},"body":{"index.html":{}}}],["effects",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot(effects",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["element.aggrements",{"_index":497,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["element.email",{"_index":495,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["element.name",{"_index":494,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["email",{"_index":185,"title":{},"body":{"classes/ConsentsDTO.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"index.html":{}}}],["email:'elizabeth.williams@test.com",{"_index":536,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["email:'jack.smith@test.com",{"_index":520,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["email:'linda.williams@test.com",{"_index":538,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["email:'mary.williams@test.com",{"_index":525,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["email:'susan.williams@test.com",{"_index":528,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["email:this.submitform.get('email')?.value",{"_index":374,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["enable",{"_index":353,"title":{},"body":{"components/GiveConsentComponent.html":{},"index.html":{}}}],["enablebutton",{"_index":147,"title":{},"body":{"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{}}}],["end",{"_index":779,"title":{},"body":{"index.html":{}}}],["enter",{"_index":391,"title":{},"body":{"components/GiveConsentComponent.html":{},"index.html":{}}}],["enumerations",{"_index":695,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConsentsService.html":{},"interfaces/State.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":219,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["event",{"_index":368,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{}}}],["eventemitter",{"_index":155,"title":{},"body":{"components/ButtonComponent.html":{},"components/PaginationComponent.html":{}}}],["execute",{"_index":742,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"modules/ConsentsModule.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"interfaces/State.html":{}}}],["exports",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["fake",{"_index":549,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["false",{"_index":154,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":326,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["field",{"_index":329,"title":{},"body":{"components/GiveConsentComponent.html":{},"index.html":{}}}],["fields",{"_index":359,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"modules/ConsentsModule.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"interfaces/State.html":{},"coverage.html":{}}}],["files",{"_index":727,"title":{},"body":{"index.html":{}}}],["finished",{"_index":756,"title":{},"body":{"index.html":{}}}],["first",{"_index":752,"title":{},"body":{"index.html":{}}}],["firstpage",{"_index":609,"title":{},"body":{"components/PaginationComponent.html":{}}}],["flex",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/GiveConsentComponent.html":{}}}],["font",{"_index":176,"title":{},"body":{"components/ButtonComponent.html":{},"components/ListConsentsComponent.html":{},"components/SideNavComponent.html":{}}}],["for(let",{"_index":608,"title":{},"body":{"components/PaginationComponent.html":{}}}],["form",{"_index":407,"title":{},"body":{"components/GiveConsentComponent.html":{},"index.html":{}}}],["formbuilder",{"_index":321,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["formcontrol",{"_index":338,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["formcontrol(null",{"_index":346,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["formgroup",{"_index":335,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["formsmodule",{"_index":244,"title":{},"body":{"modules/ConsentsModule.html":{},"modules/CoreModule.html":{}}}],["fourth",{"_index":755,"title":{},"body":{"index.html":{}}}],["functions",{"_index":773,"title":{},"body":{"index.html":{}}}],["further",{"_index":788,"title":{},"body":{"index.html":{}}}],["garcia",{"_index":533,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["generate",{"_index":730,"title":{},"body":{"index.html":{}}}],["get_consents",{"_index":702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get_consents_fail",{"_index":704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get_consents_success",{"_index":703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["getconsents",{"_index":204,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/ListConsentsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getconsentsfail",{"_index":237,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getconsentssuccesss",{"_index":238,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getconsentssuccesss({payload",{"_index":223,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["getting",{"_index":706,"title":{"index.html":{}},"body":{}}],["gettotalpages",{"_index":572,"title":{},"body":{"components/PaginationComponent.html":{}}}],["give",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"modules/ConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["giveconsentcomponent",{"_index":52,"title":{"components/GiveConsentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"modules/ConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["given",{"_index":496,"title":{},"body":{"components/ListConsentsComponent.html":{},"index.html":{}}}],["gmt+0530",{"_index":761,"title":{},"body":{"index.html":{}}}],["go",{"_index":793,"title":{},"body":{"index.html":{}}}],["graph",{"_index":799,"title":{},"body":{"modules.html":{}}}],["header",{"_index":499,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["height",{"_index":630,"title":{},"body":{"components/SideNavComponent.html":{}}}],["help",{"_index":789,"title":{},"body":{"index.html":{}}}],["here",{"_index":745,"title":{},"body":{"index.html":{}}}],["html",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["http",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConsentsService.html":{},"interceptors/MockHttpInterceptor.html":{}}}],["http://localhost:4200",{"_index":724,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":265,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["httpclientmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":546,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["httphandler",{"_index":515,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":547,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["httpinterceptorproviders",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httprequest",{"_index":514,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["httpresponse",{"_index":548,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["httpresponse(response",{"_index":561,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["identifier",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["if(items",{"_index":474,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["if(request.url",{"_index":551,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["if(this.consentssub",{"_index":481,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["if(this.currentpage",{"_index":606,"title":{},"body":{"components/PaginationComponent.html":{}}}],["if(this.submitform.get('aggrement1')?.value",{"_index":354,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["if(this.submitform.valid",{"_index":369,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["if(this.totalpages",{"_index":604,"title":{},"body":{"components/PaginationComponent.html":{}}}],["implements",{"_index":137,"title":{},"body":{"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"injectables/ConsentsEffects.html":{},"modules/ConsentsModule.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"interfaces/State.html":{}}}],["import('./consents/consents.modules').then(m",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConsentsModule.html":{},"modules/CoreModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"interfaces/State.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["india",{"_index":762,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"modules/ConsentsModule.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"interfaces/State.html":{}}}],["inherit",{"_index":413,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["initialstate",{"_index":288,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":199,"title":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{}},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"interceptors/MockHttpInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":201,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"overview.html":{}}}],["injector",{"_index":511,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["input",{"_index":161,"title":{},"body":{"components/ButtonComponent.html":{},"components/PaginationComponent.html":{}}}],["inputs",{"_index":145,"title":{},"body":{"components/ButtonComponent.html":{},"components/PaginationComponent.html":{}}}],["intercept",{"_index":509,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["intercept(request",{"_index":513,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["interceptor",{"_index":505,"title":{"interceptors/MockHttpInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"interceptors/MockHttpInterceptor.html":{}}}],["interceptors/index.ts",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptors/mockhttpinterceptor.ts",{"_index":508,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{},"coverage.html":{}}}],["interceptors/mockhttpinterceptor.ts:12",{"_index":545,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["interceptors/mockhttpinterceptor.ts:26",{"_index":512,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["interceptors/mockhttpinterceptor.ts:30",{"_index":516,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["interface",{"_index":281,"title":{"interfaces/ConsentsState.html":{},"interfaces/State.html":{}},"body":{"interfaces/ConsentsState.html":{},"interfaces/State.html":{},"coverage.html":{}}}],["interfaces",{"_index":283,"title":{},"body":{"interfaces/ConsentsState.html":{},"interfaces/State.html":{},"overview.html":{}}}],["isemailvalid",{"_index":316,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["isemailvalid(field",{"_index":327,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["isrequirefield",{"_index":317,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["isrequirefield(field",{"_index":330,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["item",{"_index":554,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["items",{"_index":479,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"index.html":{}}}],["items.consents",{"_index":475,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["items.consents.length",{"_index":476,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["johnson",{"_index":535,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["justify",{"_index":410,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{}}}],["karma",{"_index":744,"title":{},"body":{"index.html":{}}}],["last",{"_index":754,"title":{},"body":{"index.html":{}}}],["later",{"_index":780,"title":{},"body":{"index.html":{}}}],["left",{"_index":417,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/SideNavComponent.html":{}}}],["legend",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["li",{"_index":641,"title":{},"body":{"components/SideNavComponent.html":{}}}],["light",{"_index":645,"title":{},"body":{"components/SideNavComponent.html":{}}}],["lightblue",{"_index":620,"title":{},"body":{"components/PaginationComponent.html":{}}}],["lines",{"_index":776,"title":{},"body":{"index.html":{}}}],["link",{"_index":644,"title":{},"body":{"components/SideNavComponent.html":{}}}],["list",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"modules/ConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["listconsentscomponent",{"_index":55,"title":{"components/ListConsentsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"modules/ConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["loadchildren",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":285,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["lodash",{"_index":464,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["m.consentsmodule",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["management",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["map",{"_index":229,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{}}}],["map((consents",{"_index":214,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["margin",{"_index":637,"title":{},"body":{"components/SideNavComponent.html":{}}}],["mat",{"_index":498,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{}}}],["matbuttonmodule",{"_index":302,"title":{},"body":{"modules/CoreModule.html":{}}}],["matcheckboxmodule",{"_index":258,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["matching",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"modules/ConsentsModule.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"interfaces/State.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.totalrecords",{"_index":603,"title":{},"body":{"components/PaginationComponent.html":{}}}],["matinputmodule",{"_index":260,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["matpaginatormodule",{"_index":254,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["mattabledatasource",{"_index":461,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["mattabledatasource(result",{"_index":493,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["mattablemodule",{"_index":252,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["metareducer",{"_index":650,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":142,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["miller",{"_index":527,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["miscellaneous",{"_index":694,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mockhttpinterceptor",{"_index":506,"title":{"interceptors/MockHttpInterceptor.html":{}},"body":{"interceptors/MockHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":67,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConsentsModule.html":{},"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{}}}],["modules",{"_index":69,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConsentsModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":790,"title":{},"body":{"index.html":{}}}],["multi",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["name:'elizabeth",{"_index":534,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["name:'jack",{"_index":518,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["name:'jessica",{"_index":539,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["name:'joseph",{"_index":540,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["name:'linda",{"_index":537,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["name:'margaret",{"_index":543,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["name:'mary",{"_index":523,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["name:'michael",{"_index":532,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["name:'richard",{"_index":530,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["name:'robert",{"_index":526,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["name:'sarah",{"_index":544,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["name:'thomas",{"_index":541,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["nav",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["nav.component",{"_index":307,"title":{},"body":{"modules/CoreModule.html":{}}}],["nav.component.html",{"_index":624,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.scss",{"_index":623,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts",{"_index":622,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:13",{"_index":626,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:9",{"_index":625,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav/side",{"_index":306,"title":{},"body":{"modules/CoreModule.html":{},"components/SideNavComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":723,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":627,"title":{},"body":{"components/SideNavComponent.html":{}}}],["need",{"_index":785,"title":{},"body":{"index.html":{}}}],["new",{"_index":163,"title":{},"body":{"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"coverage.html":{},"index.html":{}}}],["newsletter",{"_index":396,"title":{},"body":{"components/GiveConsentComponent.html":{},"miscellaneous/enumerations.html":{}}}],["newsletter\",\"be",{"_index":521,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["newsletter\",\"contribute",{"_index":529,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["next",{"_index":486,"title":{},"body":{"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"index.html":{}}}],["next.handle(request",{"_index":564,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["nextpage",{"_index":579,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ng",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ConsentsModule.html":{},"modules/CoreModule.html":{}}}],["ngonchanges",{"_index":573,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ngondestroy",{"_index":431,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["ngoninit",{"_index":144,"title":{},"body":{"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["ngrx/effects",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConsentsEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interfaces/State.html":{},"dependencies.html":{}}}],["none",{"_index":640,"title":{},"body":{"components/SideNavComponent.html":{}}}],["null",{"_index":447,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["number",{"_index":452,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{}}}],["object",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(this.submitform.controls).foreach(field",{"_index":388,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["observable",{"_index":268,"title":{},"body":{"injectables/ConsentsService.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{}}}],["of(addconsentsfail({payload",{"_index":218,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["of(getconsentsfail({payload",{"_index":224,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["of(new",{"_index":560,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["oftype",{"_index":226,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["oftype(consentactiontypes.add_consents",{"_index":210,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["oftype(consentactiontypes.get_consents",{"_index":221,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["on(addconsents",{"_index":290,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(addconsentsfail",{"_index":293,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(addconsentssuccess",{"_index":292,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(getconsents",{"_index":294,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(getconsentsfail",{"_index":297,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(getconsentssuccesss",{"_index":295,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["onaggrement",{"_index":318,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["onchangeperpage",{"_index":574,"title":{},"body":{"components/PaginationComponent.html":{}}}],["onchangeperpage(page",{"_index":590,"title":{},"body":{"components/PaginationComponent.html":{}}}],["onchanges",{"_index":337,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{}}}],["onclick",{"_index":149,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ondestroy",{"_index":421,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["oninit",{"_index":138,"title":{},"body":{"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["onlyself",{"_index":364,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["onnext",{"_index":575,"title":{},"body":{"components/PaginationComponent.html":{}}}],["onnextpage",{"_index":432,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["onnextpage(page",{"_index":440,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["onpagechange",{"_index":433,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["onpagechange(page",{"_index":442,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["onpaginate",{"_index":434,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["onprev",{"_index":576,"title":{},"body":{"components/PaginationComponent.html":{}}}],["onprevpage",{"_index":435,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["onprevpage(page",{"_index":445,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["optional",{"_index":191,"title":{},"body":{"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{}}}],["out",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsentsModule.html":{},"modules/CoreModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":162,"title":{},"body":{"components/ButtonComponent.html":{},"components/PaginationComponent.html":{}}}],["outputs",{"_index":148,"title":{},"body":{"components/ButtonComponent.html":{},"components/PaginationComponent.html":{}}}],["overview",{"_index":794,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":677,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/SideNavComponent.html":{}}}],["page",{"_index":385,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"index.html":{}}}],["pagecount",{"_index":605,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pages",{"_index":577,"title":{},"body":{"components/PaginationComponent.html":{},"index.html":{}}}],["pagesize",{"_index":428,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{}}}],["pagination",{"_index":488,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"index.html":{}}}],["pagination'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["pagination.component.html",{"_index":567,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.scss",{"_index":566,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":58,"title":{"components/PaginationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["parameters",{"_index":190,"title":{},"body":{"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{}}}],["path",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":296,"title":{},"body":{"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":213,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["pipe(map((res",{"_index":277,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["pipe(map((res:any",{"_index":280,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["platform",{"_index":782,"title":{},"body":{"index.html":{}}}],["please",{"_index":390,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["pointer",{"_index":611,"title":{},"body":{"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["post",{"_index":562,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["prev",{"_index":751,"title":{},"body":{"index.html":{}}}],["previous",{"_index":485,"title":{},"body":{"components/ListConsentsComponent.html":{},"index.html":{}}}],["prevpage",{"_index":580,"title":{},"body":{"components/PaginationComponent.html":{}}}],["primary",{"_index":168,"title":{},"body":{"components/ButtonComponent.html":{}}}],["private",{"_index":239,"title":{},"body":{"injectables/ConsentsEffects.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{}}}],["processes",{"_index":711,"title":{},"body":{"index.html":{}}}],["production",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":733,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"interfaces/State.html":{}}}],["props",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":273,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":314,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{}}}],["radius",{"_index":170,"title":{},"body":{"components/ButtonComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["reactiveformsmodule",{"_index":245,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["receive",{"_index":395,"title":{},"body":{"components/GiveConsentComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["redecuers/consents.reducer",{"_index":651,"title":{},"body":{"interfaces/State.html":{}}}],["redirect",{"_index":384,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["reducers",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":795,"title":{},"body":{"index.html":{}}}],["reload",{"_index":726,"title":{},"body":{"index.html":{}}}],["request",{"_index":517,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["request.body",{"_index":563,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["request.method",{"_index":552,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["required",{"_index":389,"title":{},"body":{"components/GiveConsentComponent.html":{},"index.html":{}}}],["res",{"_index":278,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["reset",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsentsModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["response",{"_index":556,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["result",{"_index":489,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"modules/ConsentsModule.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"interfaces/State.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":275,"title":{},"body":{"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{}}}],["returns",{"_index":158,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["rgb(189",{"_index":635,"title":{},"body":{"components/SideNavComponent.html":{}}}],["rgb(228",{"_index":632,"title":{},"body":{"components/SideNavComponent.html":{}}}],["rgb(64",{"_index":612,"title":{},"body":{"components/PaginationComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConsentsService.html":{}}}],["root'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["route",{"_index":803,"title":{},"body":{"overview.html":{}}}],["router",{"_index":323,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["routermodule",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["routermodule.forchild(routes",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule.forroot(routes",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":127,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsentsModule.html":{}}}],["routing.module.ts",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":500,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["run",{"_index":720,"title":{},"body":{"index.html":{}}}],["running",{"_index":738,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":227,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":231,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{}}}],["scaffolding",{"_index":729,"title":{},"body":{"index.html":{}}}],["scss/variable",{"_index":165,"title":{},"body":{"components/ButtonComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["second",{"_index":753,"title":{},"body":{"index.html":{}}}],["secs",{"_index":758,"title":{},"body":{"index.html":{}}}],["select",{"_index":462,"title":{},"body":{"components/ListConsentsComponent.html":{},"index.html":{}}}],["selected",{"_index":617,"title":{},"body":{"components/PaginationComponent.html":{},"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["serve",{"_index":721,"title":{},"body":{"index.html":{}}}],["server",{"_index":719,"title":{},"body":{"index.html":{}}}],["service",{"_index":272,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["services/consents.service",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":487,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["setconsents",{"_index":263,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["setconsents(consent",{"_index":269,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["shown",{"_index":397,"title":{},"body":{"components/GiveConsentComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["side",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["sidenavcomponent",{"_index":60,"title":{"components/SideNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["simply",{"_index":715,"title":{},"body":{"index.html":{}}}],["size",{"_index":177,"title":{},"body":{"components/ButtonComponent.html":{},"components/ListConsentsComponent.html":{},"components/SideNavComponent.html":{}}}],["slice",{"_index":463,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["slice(this.consentsdata",{"_index":490,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["smith",{"_index":519,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["solid",{"_index":174,"title":{},"body":{"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"modules/ConsentsModule.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"modules/CoreModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"interfaces/State.html":{},"index.html":{}}}],["src/.../consents",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consents.action.ts",{"_index":696,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../consents.enum.ts",{"_index":697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../consents.reducer.ts",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consents.selector.ts",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/consents/consents",{"_index":659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/consents/consents.modules.ts",{"_index":243,"title":{},"body":{"modules/ConsentsModule.html":{}}}],["src/app/consents/give",{"_index":310,"title":{},"body":{"components/GiveConsentComponent.html":{},"coverage.html":{}}}],["src/app/consents/list",{"_index":419,"title":{},"body":{"components/ListConsentsComponent.html":{},"coverage.html":{}}}],["src/app/core/components/pagination/pagination.component.ts",{"_index":565,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:104",{"_index":586,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:11",{"_index":595,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:12",{"_index":598,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:13",{"_index":596,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:14",{"_index":597,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:16",{"_index":583,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:17",{"_index":582,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:19",{"_index":584,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:20",{"_index":585,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:21",{"_index":581,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:25",{"_index":589,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:29",{"_index":588,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:34",{"_index":587,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:39",{"_index":594,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:84",{"_index":591,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:90",{"_index":593,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/pagination/pagination.component.ts:97",{"_index":592,"title":{},"body":{"components/PaginationComponent.html":{}}}],["src/app/core/components/side",{"_index":621,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["src/app/core/controls/button/button.component.ts",{"_index":136,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/app/core/controls/button/button.component.ts:11",{"_index":152,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/core/controls/button/button.component.ts:12",{"_index":156,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/core/controls/button/button.component.ts:13",{"_index":151,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/core/controls/button/button.component.ts:17",{"_index":160,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/core/controls/button/button.component.ts:20",{"_index":157,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/app/core/core.modules.ts",{"_index":301,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/dto/consentsdto",{"_index":232,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{}}}],["src/app/dto/consentsdto.ts",{"_index":183,"title":{},"body":{"classes/ConsentsDTO.html":{},"coverage.html":{}}}],["src/app/dto/consentsdto.ts:3",{"_index":194,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["src/app/dto/consentsdto.ts:4",{"_index":193,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["src/app/dto/consentsdto.ts:5",{"_index":189,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["src/app/enums/consents.enum",{"_index":341,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["src/app/enums/consents.enum.ts",{"_index":705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/http",{"_index":507,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/consents.service",{"_index":233,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["src/app/services/consents.service.ts",{"_index":262,"title":{},"body":{"injectables/ConsentsService.html":{},"coverage.html":{}}}],["src/app/services/consents.service.ts:13",{"_index":266,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/services/consents.service.ts:20",{"_index":267,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/services/consents.service.ts:25",{"_index":270,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/store/actions",{"_index":465,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["src/app/store/actions/consents.action",{"_index":342,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["src/app/store/actions/consents.action.ts",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/effects/consents.effect.ts",{"_index":202,"title":{},"body":{"injectables/ConsentsEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/consents.effect.ts:10",{"_index":207,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["src/app/store/effects/consents.effect.ts:17",{"_index":225,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["src/app/store/effects/consents.effect.ts:29",{"_index":220,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["src/app/store/effects/index.ts",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/redecuers",{"_index":343,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{}}}],["src/app/store/redecuers/consents.reducer.ts",{"_index":284,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/redecuers/index.ts",{"_index":647,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors",{"_index":466,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["src/app/store/selectors/consents.selector.ts",{"_index":671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConsentsService.html":{},"interfaces/State.html":{}}}],["src/environments/environment.dev.ts",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":674,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":675,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":763,"title":{},"body":{"index.html":{}}}],["started",{"_index":707,"title":{"index.html":{}},"body":{}}],["state",{"_index":287,"title":{"interfaces/State.html":{}},"body":{"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.consents",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state:consentsstate",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":656,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["statistics",{"_index":403,"title":{},"body":{"components/GiveConsentComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["status",{"_index":557,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["store",{"_index":322,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{}}}],["store/effects",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["store/redecuers",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["stored",{"_index":735,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot(reducers",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"components/ListConsentsComponent.html":{}}}],["style",{"_index":639,"title":{},"body":{"components/SideNavComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["submit",{"_index":367,"title":{},"body":{"components/GiveConsentComponent.html":{},"index.html":{}}}],["submitconsent",{"_index":319,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["submitform",{"_index":315,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["summary",{"_index":765,"title":{},"body":{"index.html":{}}}],["support",{"_index":796,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":797,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":230,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["switchmap((action",{"_index":211,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["system",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["table",{"_index":412,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"coverage.html":{}}}],["tablecolumns",{"_index":429,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["targeted",{"_index":398,"title":{},"body":{"components/GiveConsentComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["test",{"_index":741,"title":{},"body":{"index.html":{}}}],["testing",{"_index":786,"title":{},"body":{"index.html":{}}}],["tests",{"_index":740,"title":{},"body":{"index.html":{}}}],["text",{"_index":404,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["this.actions$.pipe",{"_index":209,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["this.aggrements",{"_index":198,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["this.consents",{"_index":470,"title":{},"body":{"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{}}}],["this.consents$.subscribe((items",{"_index":473,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["this.consents.length",{"_index":555,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["this.consents.map",{"_index":553,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["this.consentsdata",{"_index":477,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["this.consentspaginatedata",{"_index":492,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["this.consentsservice.getconsents",{"_index":222,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["this.consentsservice.setconsents(action.payload",{"_index":212,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["this.consentssub",{"_index":472,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["this.consentssub.unsubscribe",{"_index":482,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["this.currentpage",{"_index":484,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{}}}],["this.disableprevnextbutton",{"_index":599,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.email",{"_index":197,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["this.enablebutton",{"_index":357,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.fb.group",{"_index":345,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.gettotalpages",{"_index":600,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.http.get(`/consents",{"_index":276,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["this.http.post(`/consents",{"_index":279,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["this.name",{"_index":196,"title":{},"body":{"classes/ConsentsDTO.html":{}}}],["this.onclick.emit",{"_index":164,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.onpaginate",{"_index":480,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["this.pagesize",{"_index":491,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{}}}],["this.router.navigate(['/consents",{"_index":386,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.store.dispatch(addconsents",{"_index":383,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.store.dispatch(getconsents",{"_index":469,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["this.store.pipe(select(getconsents",{"_index":471,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["this.submitform",{"_index":344,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.submitform.get('aggrement1",{"_index":375,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.submitform.get('aggrement1')?.value",{"_index":376,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.submitform.get('aggrement2",{"_index":378,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.submitform.get('aggrement2')?.value",{"_index":355,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.submitform.get('aggrement3",{"_index":380,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.submitform.get('aggrement3')?.value",{"_index":356,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.submitform.get('name')?.value",{"_index":373,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.submitform.get(field",{"_index":361,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.titleservice.settitle(\"consents",{"_index":468,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["this.titleservice.settitle(\"give",{"_index":352,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.totalpages",{"_index":602,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.totalrecords",{"_index":478,"title":{},"body":{"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{}}}],["time",{"_index":764,"title":{},"body":{"index.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"index.html":{}}}],["titleservice",{"_index":324,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{}}}],["top:0",{"_index":629,"title":{},"body":{"components/SideNavComponent.html":{}}}],["total",{"_index":601,"title":{},"body":{"components/PaginationComponent.html":{},"index.html":{}}}],["totalpages",{"_index":570,"title":{},"body":{"components/PaginationComponent.html":{}}}],["totalrecords",{"_index":430,"title":{},"body":{"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["true",{"_index":291,"title":{},"body":{"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"classes/ConsentsDTO.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ul",{"_index":638,"title":{},"body":{"components/SideNavComponent.html":{}}}],["underline",{"_index":616,"title":{},"body":{"components/PaginationComponent.html":{}}}],["unit",{"_index":739,"title":{},"body":{"index.html":{}}}],["use",{"_index":731,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":710,"title":{},"body":{"index.html":{}}}],["users",{"_index":713,"title":{},"body":{"index.html":{}}}],["v1",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":392,"title":{},"body":{"components/GiveConsentComponent.html":{},"index.html":{}}}],["validate",{"_index":365,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["validators",{"_index":339,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["validators.required",{"_index":347,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["validators.required,validators.email",{"_index":348,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"injectables/ConsentsEffects.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"components/PaginationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["variable",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":804,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":743,"title":{},"body":{"index.html":{}}}],["view",{"_index":714,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":460,"title":{},"body":{"components/ListConsentsComponent.html":{}}}],["visit",{"_index":402,"title":{},"body":{"components/GiveConsentComponent.html":{},"interceptors/MockHttpInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["void",{"_index":159,"title":{},"body":{"components/ButtonComponent.html":{},"components/GiveConsentComponent.html":{},"components/ListConsentsComponent.html":{},"components/PaginationComponent.html":{},"components/SideNavComponent.html":{}}}],["weight",{"_index":179,"title":{},"body":{"components/ButtonComponent.html":{},"components/SideNavComponent.html":{}}}],["white",{"_index":172,"title":{},"body":{"components/ButtonComponent.html":{}}}],["width",{"_index":408,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["williams",{"_index":524,"title":{},"body":{"interceptors/MockHttpInterceptor.html":{}}}],["write",{"_index":746,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/ConsentsModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Consent Management System'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Consent Management System';\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                        \n                \n            \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n.main-app {\n    display: flex;\n    .container {\n        padding: 0.8rem;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'ListConsentsComponent', 'selector': 'app-list-consents'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nConsentsModule\n\nConsentsModule\n\nAppModule -->\n\nConsentsModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nConsentsService\n\nConsentsService\n\nAppModule -->\n\nConsentsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ConsentsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            ConsentsModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ConsentsModule } from './consents/consents.modules';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CoreModule } from './core/core.modules';\nimport { HttpClientModule } from '@angular/common/http'\nimport { metaReducers, reducers } from './store/redecuers';\nimport { StoreModule } from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { ConsentsService } from './services/consents.service';\nimport { EffectsModule } from '@ngrx/effects';\nimport { effects } from './store/effects';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { httpInterceptorProviders } from './http-interceptors';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [    \n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    EffectsModule.forRoot(effects),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    CoreModule,\n    ConsentsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    Title,\n    ConsentsService, \n    httpInterceptorProviders       \n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path:'',\n    loadChildren: () => \"import('./consents/consents.modules').then(m => m.ConsentsModule)\" \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/controls/button/button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                caption\n                            \n                            \n                                enableButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/controls/button/button.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        caption\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/controls/button/button.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/controls/button/button.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/controls/button/button.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/controls/button/button.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/controls/button/button.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n// button component\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n  @Input() caption: string = '';\n  @Output() onClick = new EventEmitter();\n  @Input() enableButton: boolean = false;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  click() {\n    this.onClick.emit();\n  }\n\n}\n\n    \n\n    \n        \n    {{caption}}\n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                @import '../../../../scss/variable';\n\n.app-button {\n    .button {\n        background-color: $primary-color;\n        border-radius: 5px;\n        color: white;\n        border:1px solid black;\n        font-size: $font-size-18;\n        font-weight: bold;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{caption}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'ListConsentsComponent', 'selector': 'app-list-consents'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsentsDTO.html":{"url":"classes/ConsentsDTO.html","title":"class - ConsentsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsentsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/DTO/ConsentsDTO.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aggrements\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_name: string, _email: string, _aggrements: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/DTO/ConsentsDTO.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _aggrements\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aggrements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/DTO/ConsentsDTO.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/DTO/ConsentsDTO.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/DTO/ConsentsDTO.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ConsentsDTO {\n    name: string;\n    email: string;\n    aggrements: string[];\n\n    constructor(_name: string, _email: string, _aggrements:string[]) {\n        this.name = _name,\n        this.email = _email,\n        this.aggrements = _aggrements\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsEffects.html":{"url":"injectables/ConsentsEffects.html","title":"injectable - ConsentsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/consents.effect.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AddConsents$\n                            \n                            \n                                getConsents$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, consentsService: ConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/consents.effect.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentsService\n                                                  \n                                                        \n                                                                        ConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AddConsents$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ConsentActionTypes.ADD_CONSENTS),\n            switchMap((action: any) => this.consentsService.setConsents(action.payload)\n                .pipe(\n                    map((consents: ConsentsDTO) => AddConsentsSuccess({payload: consents})),\n                    catchError((error) => of(AddConsentsFail({payload: error})))\n                ) \n            )\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/store/effects/consents.effect.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConsents$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ConsentActionTypes.GET_CONSENTS),\n            switchMap((action) => this.consentsService.getConsents()\n                .pipe(\n                    map((consents: ConsentsDTO[]) => GetConsentsSuccesss({payload: consents})),\n                    catchError((error) => of(GetConsentsFail({payload: error})))\n                ) \n            )\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/store/effects/consents.effect.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { of } from \"rxjs\";\nimport { catchError, map, switchMap } from \"rxjs/operators\";\nimport { ConsentsDTO } from \"src/app/DTO/ConsentsDTO\";\nimport { ConsentsService } from \"src/app/services/consents.service\";\nimport { AddConsentsFail, AddConsentsSuccess, ConsentActionTypes, GetConsentsFail, GetConsentsSuccesss } from \"../actions\";\n\n@Injectable()\nexport class ConsentsEffects {\n\n    constructor( \n        private actions$: Actions,\n        private consentsService: ConsentsService\n        ) {};\n\n    getConsents$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ConsentActionTypes.GET_CONSENTS),\n            switchMap((action) => this.consentsService.getConsents()\n                .pipe(\n                    map((consents: ConsentsDTO[]) => GetConsentsSuccesss({payload: consents})),\n                    catchError((error) => of(GetConsentsFail({payload: error})))\n                ) \n            )\n        )\n    );\n\n    AddConsents$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ConsentActionTypes.ADD_CONSENTS),\n            switchMap((action: any) => this.consentsService.setConsents(action.payload)\n                .pipe(\n                    map((consents: ConsentsDTO) => AddConsentsSuccess({payload: consents})),\n                    catchError((error) => of(AddConsentsFail({payload: error})))\n                ) \n            )\n        )\n    );\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsentsModule.html":{"url":"modules/ConsentsModule.html","title":"module - ConsentsModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsentsModule\n\n\n\ncluster_ConsentsModule_declarations\n\n\n\ncluster_ConsentsModule_imports\n\n\n\n\nGiveConsentComponent\n\nGiveConsentComponent\n\n\n\nConsentsModule\n\nConsentsModule\n\nConsentsModule -->\n\nGiveConsentComponent->ConsentsModule\n\n\n\n\n\nListConsentsComponent\n\nListConsentsComponent\n\nConsentsModule -->\n\nListConsentsComponent->ConsentsModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nConsentsModule -->\n\nCoreModule->ConsentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/consents/consents.modules.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GiveConsentComponent\n                        \n                        \n                            ListConsentsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { CoreModule } from \"../core/core.modules\";\nimport { ConsentsRoutingModule } from \"./consents-routing.module\";\nimport { GiveConsentComponent } from \"./give-consent/give-consent.component\";\nimport { ListConsentsComponent } from \"./list-consents/list-consents.component\";\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input'\n\n// consent modules\n@NgModule({\n   declarations: [\n       ListConsentsComponent,\n       GiveConsentComponent\n   ],\n   imports:[\n    CommonModule,\n    ConsentsRoutingModule,\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatInputModule\n   ]\n})\n\nexport class ConsentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsService.html":{"url":"injectables/ConsentsService.html","title":"injectable - ConsentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/consents.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConsents\n                            \n                            \n                                setConsents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/consents.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getConsents\n                        \n                    \n                \n            \n            \n                \ngetConsents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/consents.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsents\n                        \n                    \n                \n            \n            \n                \nsetConsents(consent: ConsentsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/consents.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consent\n                                    \n                                                ConsentsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { ConsentsDTO } from \"../DTO/ConsentsDTO\";\nimport { map } from 'rxjs/operators';\n\n// consent service\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ConsentsService {\n    \n\n    constructor(private http: HttpClient) {\n    }\n\n\n    getConsents() : Observable {\n        return this.http.get(`/consents`)\n            .pipe(map((res: any) => res));\n    }\n    \n    setConsents(consent: ConsentsDTO) : Observable {\n        return this.http.post(`/consents`, consent)\n            .pipe(map((res:any) => res));\n    }    \n\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConsentsState.html":{"url":"interfaces/ConsentsState.html","title":"interface - ConsentsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConsentsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/redecuers/consents.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            consents\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        consents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        consents:         ConsentsDTO[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConsentsDTO[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on, State } from \"@ngrx/store\";\nimport { ConsentsDTO } from \"src/app/DTO/ConsentsDTO\";\nimport { AddConsents, AddConsentsFail, AddConsentsSuccess, GetConsents, GetConsentsFail, GetConsentsSuccesss } from \"../actions\";\n\nexport interface ConsentsState {\n    consents: ConsentsDTO[],\n    loading: boolean\n}\n\nexport const initialState: ConsentsState = {\n    consents: [],\n    loading: false\n};\n\nexport const consentsReducer = createReducer(\n    initialState,\n    on(AddConsents, state => ({...state, loading: true}) ),\n    on(AddConsentsSuccess, state => ({...state, loading: false})),\n    on(AddConsentsFail, state => ({...state, loading: false })),\n    \n    on(GetConsents, state => ({...state, loading: true })),\n    on(GetConsentsSuccesss, (state,{ payload }) => ({...state, consents: payload, loading: false })),\n    on(GetConsentsFail, state => ({...state, loading: false }))\n    \n);\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nButtonComponent->CoreModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nCoreModule -->\n\nPaginationComponent->CoreModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nCoreModule -->\n\nSideNavComponent->CoreModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nCoreModule->ButtonComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nCoreModule->PaginationComponent \n\n\n\n\n\nSideNavComponent \n\nSideNavComponent \n\nSideNavComponent  -->\n\nCoreModule->SideNavComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.modules.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SideNavComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SideNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { RouterModule } from \"@angular/router\";\nimport { PaginationComponent } from \"./components/pagination/pagination.component\";\nimport { SideNavComponent } from \"./components/side-nav/side-nav.component\";\nimport { ButtonComponent } from \"./controls/button/button.component\";\n\n// core module\n@NgModule({\n    declarations: [\n        SideNavComponent,\n        ButtonComponent,\n        PaginationComponent\n    ],\n    imports:[\n        FormsModule,\n        RouterModule,\n        CommonModule,\n        MatButtonModule\n    ],\n    exports: [\n        SideNavComponent,\n        ButtonComponent,\n        PaginationComponent\n    ]\n})\n\nexport class CoreModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GiveConsentComponent.html":{"url":"components/GiveConsentComponent.html","title":"component - GiveConsentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GiveConsentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/consents/give-consent/give-consent.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-give-consent\n            \n\n            \n                styleUrls\n                ./give-consent.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./give-consent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                enableButton\n                            \n                            \n                                    Public\n                                submitForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEmailValid\n                            \n                            \n                                isRequireField\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAggrement\n                            \n                            \n                                submitConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, router: Router, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/consents/give-consent/give-consent.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailValid\n                        \n                    \n                \n            \n            \n                \nisEmailValid(field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/consents/give-consent/give-consent.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRequireField\n                        \n                    \n                \n            \n            \n                \nisRequireField(field: \"name\" | \"email\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/consents/give-consent/give-consent.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            \"name\" | \"email\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/consents/give-consent/give-consent.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAggrement\n                        \n                    \n                \n            \n            \n                \nonAggrement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/consents/give-consent/give-consent.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitConsent\n                        \n                    \n                \n            \n            \n                \nsubmitConsent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/consents/give-consent/give-consent.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        enableButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/consents/give-consent/give-consent.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        submitForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/consents/give-consent/give-consent.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnChanges, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { ConsentsDTO } from 'src/app/DTO/ConsentsDTO';\nimport { ConsentsEnum } from 'src/app/enums/consents.enum';\nimport { AddConsents } from 'src/app/store/actions/consents.action';\nimport { State } from 'src/app/store/redecuers';\n\n// give consent component\n@Component({\n  selector: 'app-give-consent',\n  templateUrl: './give-consent.component.html',\n  styleUrls: ['./give-consent.component.scss']\n})\nexport class GiveConsentComponent implements OnInit{\n\n  public submitForm: FormGroup;\n  public enableButton: boolean = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private store: Store,\n    private router: Router,\n    private titleService: Title) {\n    \n    this.submitForm = this.fb.group({\n      name: new FormControl(null, [Validators.required]),\n      email: new FormControl(null, [Validators.required,Validators.email]),\n      aggrement1: new FormControl(null),\n      aggrement2: new FormControl(null),\n      aggrement3: new FormControl(null)\n    });\n   }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Give consent\");\n  }\n\n  // enable button \n  onAggrement() {\n    if(this.submitForm.get('aggrement1')?.value === true \n      ||  this.submitForm.get('aggrement2')?.value === true\n      ||  this.submitForm.get('aggrement3')?.value === true) {\n        this.enableButton = true;\n      } else {\n        this.enableButton = false;\n      }\n  }\n\n  // check fields\n  isRequireField(field: 'name' | 'email') {\n    let control = this.submitForm.get(field);\n\n    return control?.hasError(\"required\") && control?.markAsTouched({ onlySelf: true});\n  }\n\n  // validate email\n  isEmailValid(field: 'email') {\n    let control = this.submitForm.get(field);\n\n    return control?.hasError(\"email\") && control?.markAsTouched({ onlySelf: true});\n  }\n\n  // submit event\n  submitConsent()  {\n\n    if(this.submitForm.valid) {\n      // build consents dto\n      let consentsDTO:ConsentsDTO = {\n        name: this.submitForm.get('name')?.value,\n        email:this.submitForm.get('email')?.value,\n        aggrements: [\n          this.submitForm.get('aggrement1') && this.submitForm.get('aggrement1')?.value ?\n             ConsentsEnum.AGGREMENT1 : '',\n          this.submitForm.get('aggrement2') && this.submitForm.get('aggrement2')?.value ?\n            ConsentsEnum.AGGREMENT2 : '',\n          this.submitForm.get('aggrement3') && this.submitForm.get('aggrement3')?.value ?\n            ConsentsEnum.AGGREMENT3 : ''          \n        ]\n      }; \n\n      // add consents\n      this.store.dispatch(AddConsents({ payload: consentsDTO}));\n\n      // redirect to list page\n      this.router.navigate(['/consents']);\n\n    } else {\n      // validate controls\n      Object.keys(this.submitForm.controls).forEach(field => { \n        const control = this.submitForm.get(field);            \n        control?.markAsTouched({ onlySelf: true });    \n      });\n    }\n\n  }\n}\n\n    \n\n    \n        \n    \n        \n                  \n                     \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        Name is required.\n                                    \n                                \n                            \n                            \n                                \n                                    \n                                    \n                                        Please enter a valid email address\n                                    \n                                    \n                                        Email is required.\n                                    \n                                   \n                            \n                        \n                        \n                            \n                            I agree to:\n                            \n                        \n                        \n                            \n                            \n                                \n                                     \n                                        Receive newsletter\n                                    \n                                \n                                \n                                     \n                                        Be shown targeted ads\n                                    \n                                \n                                \n                                    \n                                        Contribute to anonymous visit statistics\n                                    \n                                \n                            \n                \n                            \n                        \n                        \n                            \n                            \n                            \n                        \n                        \n                 \n            \n      \n        \n\n    \n\n    \n                \n                    ./give-consent.component.scss\n                \n                .give-consent {\n    text-align: center;\n    .form-container {\n        width: 80%;\n        display: flex;\n        justify-content: center;\n        .form-table {\n            width: inherit;\n        }\n        .submit-form-field {\n            width: 100%;\n        }\n\n        .consent-agreement {\n            border: 1px solid black;\n            text-align: left;\n            padding-left: 0.3rem;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                           Name is required.                                                                                                                                                                                                                                                                            Please enter a valid email address                                                                                                                Email is required.                                                                                                                                                                                                           I agree to:                                                                                                                                                                                                                                                 Receive newsletter                                                                                                                                                                                 Be shown targeted ads                                                                                                                                                                                Contribute to anonymous visit statistics                                                                                                                                                                                                                                                                                                                                                                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'ListConsentsComponent', 'selector': 'app-list-consents'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GiveConsentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListConsentsComponent.html":{"url":"components/ListConsentsComponent.html","title":"component - ListConsentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListConsentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/consents/list-consents/list-consents.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-consents\n            \n\n            \n                styleUrls\n                ./list-consents.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-consents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                consents$\n                            \n                            \n                                    Public\n                                consentsData\n                            \n                            \n                                    Public\n                                consentsPaginateData\n                            \n                            \n                                    Private\n                                consentsSub\n                            \n                            \n                                    Public\n                                currentPage\n                            \n                            \n                                    Public\n                                pageSize\n                            \n                            \n                                    Public\n                                tableColumns\n                            \n                            \n                                    Public\n                                totalRecords\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNextPage\n                            \n                            \n                                onPageChange\n                            \n                            \n                                onPaginate\n                            \n                            \n                                onPrevPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/consents/list-consents/list-consents.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/consents/list-consents/list-consents.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/consents/list-consents/list-consents.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNextPage\n                        \n                    \n                \n            \n            \n                \nonNextPage(page: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/consents/list-consents/list-consents.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(page: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/consents/list-consents/list-consents.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPaginate\n                        \n                    \n                \n            \n            \n                \nonPaginate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/consents/list-consents/list-consents.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPrevPage\n                        \n                    \n                \n            \n            \n                \nonPrevPage(page: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/consents/list-consents/list-consents.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        consents$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/consents/list-consents/list-consents.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        consentsData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/consents/list-consents/list-consents.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        consentsPaginateData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/consents/list-consents/list-consents.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        consentsSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/consents/list-consents/list-consents.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/consents/list-consents/list-consents.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/consents/list-consents/list-consents.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tableColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['name', 'email', 'aggrements']\n                    \n                \n                    \n                        \n                                Defined in src/app/consents/list-consents/list-consents.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalRecords\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/consents/list-consents/list-consents.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnChanges, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Title } from '@angular/platform-browser';\nimport { select, Store } from '@ngrx/store';\nimport { slice } from 'lodash';\nimport { Observable } from 'rxjs';\nimport { ConsentsDTO } from 'src/app/DTO/ConsentsDTO';\nimport { GetConsents } from 'src/app/store/actions';\nimport { State } from 'src/app/store/redecuers';\nimport { getConsents } from 'src/app/store/selectors';\n\n// list consent component\n@Component({\n  selector: 'app-list-consents',\n  templateUrl: './list-consents.component.html',\n  styleUrls: ['./list-consents.component.scss']\n})\n\nexport class ListConsentsComponent implements OnInit, OnDestroy{\n\n  public consents$: Observable | null = null\n  private consentsSub: any = null;\n  public consentsData: any | null;\n  public consentsPaginateData: any | null;\n   \n  public totalRecords: number = 0;\n  public currentPage: number = 1;\n  public pageSize: number = 2;\n  // columns\n  public tableColumns: string[] = ['name', 'email', 'aggrements'];\n\n  constructor(private store: Store, private titleService: Title) {\n  }\n\n  ngOnInit(): void {\n    this.titleService.setTitle(\"Consents\");\n    this.store.dispatch(GetConsents());\n\n    this.consents$ = this.store.pipe(select(getConsents));\n    this.consentsSub = this.consents$.subscribe((items: any) => {\n      if(items && items.consents && items.consents.length > 0) {\n        this.consentsData = items.consents; \n        this.totalRecords = items && items.consents ? items.consents.length : 0;\n        this.onPaginate();\n      }\n    }); \n  }\n\n\n  ngOnDestroy() {\n    if(this.consentsSub) {\n      this.consentsSub.unsubscribe();\n    }\n  }\n  // page change event\n  onPageChange(page: any) {\n    this.currentPage = page; \n    this.onPaginate();   \n  }\n\n  // previous page event\n  onPrevPage(page: any) {\n    this.currentPage = page;\n    this.onPaginate();\n  }\n\n  // next page event\n  onNextPage(page: any) {\n    this.currentPage = page;\n    this.onPaginate();\n  }\n\n  // set pagination \n  onPaginate()  {\n    let result: ConsentsDTO[][] = slice(this.consentsData, (this.currentPage - 1) * this.pageSize, this.currentPage * this.pageSize);\n    this.consentsPaginateData = new MatTableDataSource(result);\n  }\n}\n    \n\n    \n        \n    \n\n        \n             Name \n             {{element.name}} \n         \n\n        \n             Email \n             {{element.email}} \n        \n    \n        \n             Consents given for \n             {{element.aggrements}} \n        \n    \n\n        \n        \n    \n    \n\n\n    \n\n    \n                \n                    ./list-consents.component.scss\n                \n                @import '../../../scss/variable';\n\n.list-consents {\n\n    .mat-table {\n        border: 1px solid black;\n        .mat-header-row {\n            justify-content: center;\n            .mat-header-cell {\n                border: 1px solid black;\n                color: black;\n                font-size: 15px;\n                &.mat-column-name {\n                    justify-content: center;\n                    padding-left: 0.2rem;\n                } \n                &.mat-column-email {\n                    justify-content: center;\n                    padding-left: 0.2rem;\n                } \n                &.mat-column-aggrements {\n                    padding-left: 0.2rem;\n                }\n            }\n            \n        }\n        .mat-row {\n            .mat-cell {\n                border: 1px solid black;\n                &.mat-column-name {\n                    padding-left: 0.2rem;                    \n                } \n                &.mat-column-email {\n                    padding-left: 0.2rem;\n                } \n                &.mat-column-aggrements {\n                    padding-left: 0.2rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         Name              {{element.name}}                               Email              {{element.email}}                                  Consents given for              {{element.aggrements}}                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'ListConsentsComponent', 'selector': 'app-list-consents'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListConsentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/MockHttpInterceptor.html":{"url":"interceptors/MockHttpInterceptor.html","title":"interceptor - MockHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  MockHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/http-interceptors/mockHttpInterceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                consents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/http-interceptors/mockHttpInterceptor.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/http-interceptors/mockHttpInterceptor.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        consents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConsentsDTO[]\n\n                    \n                \n                \n                    \n                        Default value : [\n        { name:'Jack Smith', email:'jack.smith@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Mary Williams', email:'Mary.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Robert Miller', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Contribute to anonymous visit statistics\" ] },    \n        { name:'Richard Davis', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Michael Garcia', email:'Susan.Williams@test.com', aggrements: [ \"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Elizabeth Johnson', email:'Elizabeth.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Linda Williams', email:'Linda.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Jessica Davis', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Joseph Garcia', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\" ] },\n        { name:'Thomas Brown', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Margaret Miller', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Contribute to anonymous visit statistics\" ] },    \n        { name:'Jessica Davis', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Sarah Garcia', email:'Susan.Williams@test.com', aggrements: [ \"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/http-interceptors/mockHttpInterceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from \"@angular/common/http\";\nimport { Injectable, Injector } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { ConsentsDTO } from \"../DTO/ConsentsDTO\";\n\n// intercept http request to return fake data.\n\n@Injectable()\nexport class MockHttpInterceptor implements HttpInterceptor {\n\n    // fake data \n    public consents: ConsentsDTO[]  = [\n        { name:'Jack Smith', email:'jack.smith@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Mary Williams', email:'Mary.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Robert Miller', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Contribute to anonymous visit statistics\" ] },    \n        { name:'Richard Davis', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Michael Garcia', email:'Susan.Williams@test.com', aggrements: [ \"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Elizabeth Johnson', email:'Elizabeth.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Linda Williams', email:'Linda.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Jessica Davis', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Joseph Garcia', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\" ] },\n        { name:'Thomas Brown', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Margaret Miller', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Contribute to anonymous visit statistics\" ] },    \n        { name:'Jessica Davis', email:'Susan.Williams@test.com', aggrements: [ \"Receive newsletter\",\"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n        { name:'Sarah Garcia', email:'Susan.Williams@test.com', aggrements: [ \"Be shown targeted ads\",\"Contribute to anonymous visit statistics\" ] },\n    ];\n    \n    constructor(private injector: Injector) {}\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        if(request.url == '/consents' && request.method == 'GET') {\n            let data = {\n                consents: this.consents.map( (item) => {\n                        return item;\n                    }),\n                    totalRecords: this.consents.length\n                };\n            let response = { status: 200, body: data }\n            return of(new HttpResponse(response));\n        }\n        if(request.url == '/consents' && request.method == 'POST') {\n            this.consents = [...this.consents, request.body] ;\n            let response = { status: 200, body: request.body }\n            return of(new HttpResponse(response));\n        }\n        return next.handle(request);\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/pagination/pagination.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination\n            \n\n            \n                styleUrls\n                ./pagination.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentPage\n                            \n                            \n                                    Public\n                                disableNext\n                            \n                            \n                                    Public\n                                disablePrev\n                            \n                            \n                                    Public\n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disablePrevNextButton\n                            \n                            \n                                getTotalPages\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePerPage\n                            \n                            \n                                onNext\n                            \n                            \n                                onPrev\n                            \n                            \n                                pages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageSize\n                            \n                            \n                                totalRecords\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changePerPage\n                            \n                            \n                                nextPage\n                            \n                            \n                                prevPage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/pagination/pagination.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pageSize\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/pagination/pagination.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        totalRecords\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/pagination/pagination.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changePerPage\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/pagination/pagination.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nextPage\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/pagination/pagination.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        prevPage\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/components/pagination/pagination.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disablePrevNextButton\n                        \n                    \n                \n            \n            \n                \ndisablePrevNextButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/pagination/pagination.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalPages\n                        \n                    \n                \n            \n            \n                \ngetTotalPages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/pagination/pagination.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/pagination/pagination.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/pagination/pagination.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePerPage\n                        \n                    \n                \n            \n            \n                \nonChangePerPage(page: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/pagination/pagination.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNext\n                        \n                    \n                \n            \n            \n                \nonNext()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/pagination/pagination.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPrev\n                        \n                    \n                \n            \n            \n                \nonPrev()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/pagination/pagination.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n            \n                \npages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/pagination/pagination.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/core/components/pagination/pagination.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        disableNext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/core/components/pagination/pagination.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        disablePrev\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/core/components/pagination/pagination.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/core/components/pagination/pagination.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n// pagination component\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss']\n})\nexport class PaginationComponent implements OnInit {\n\n  public currentPage: number = 1;\n  public totalPages: number = 0;\n  public disableNext: boolean = false;\n  public disablePrev: boolean = false;\n  // input event\n  @Input() totalRecords: number  = 0;\n  @Input() pageSize: number = 2;\n  // output event\n  @Output() changePerPage: EventEmitter = new EventEmitter();\n  @Output() nextPage: EventEmitter = new EventEmitter();\n  @Output() prevPage: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.disablePrevNextButton();\n  }\n\n  ngOnChanges() {\n    this.getTotalPages();\n  }\n\n  // get total pages\n  getTotalPages() {\n    this.totalPages = this.totalRecords ? Math.ceil(this.totalRecords / this.pageSize) : 0;\n  }\n  \n  // get pages \n  pages() {\n    let pages: any[] = [];\n\n    if(this.totalPages == 0)\n      return [];\n\n    let pageCount = 0;    \n\n    if(this.currentPage === 1) {\n      pageCount = this.currentPage + 3;\n      pageCount = pageCount >= this.totalPages ? this.totalPages : pageCount;\n\n      for(let i = 1; i = this.totalPages ? this.totalPages : pageCount;\n\n      for(let i = 1; i  3 ? this.currentPage - 3 : 1 ; \n      \n      for(let i = firstPage; i = this.totalPages ? this.totalPages :  this.currentPage + 1;\n      for(let i = this.currentPage; i \n    \n\n    \n          \n    \n        \n    \n     \n        \n             \n                {{page}}\n            \n        \n    \n    \n         Next page >>\n    \n\n    \n\n    \n                \n                    ./pagination.component.scss\n                \n                @import '../../../../scss/variable';\n\n.pagination {\n    border: 1px solid black;\n    border-radius: 0;\n    align-items: center;\n    .page-number{\n        .page {\n            cursor: pointer;\n            color: rgb(64, 159, 190);            \n            text-decoration: underline;\n        }\n        .selected {\n            color: blue;\n            text-decoration: underline;\n        }\n    }\n    .pagination-button {\n        color: blue;\n        &.mat-button-disabled {\n            color: lightblue;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{page}}                                     Next page >>    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'ListConsentsComponent', 'selector': 'app-list-consents'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideNavComponent.html":{"url":"components/SideNavComponent.html","title":"component - SideNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/components/side-nav/side-nav.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-nav\n            \n\n            \n                styleUrls\n                ./side-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/components/side-nav/side-nav.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/components/side-nav/side-nav.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n// left side navigation component\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            Give consent                                        \n        \n        \n            Collected consents\n                \n    \n\n    \n\n    \n                \n                    ./side-nav.component.scss\n                \n                @import '../../../../scss/variable';\n\n.side-nav {\n    top:0;\n    height: 80vh;\n    background-color: rgb(228, 239, 248); // rgb(189, 184, 184);\n    padding: 0;\n    margin: 0;\n    ul {\n        list-style-type: none;\n        padding: 0;      \n        text-align: center;  \n        li {\n            font-size: $font-size-20;\n            border: 1px solid black;     \n            cursor: pointer;       \n            border-radius: 5px;\n            padding: 0.2rem;\n        }\n        .active-link {\n            background-color: $light-blue;\n            font-weight: 500;   \n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Give consent                                                                    Collected consents                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'ListConsentsComponent', 'selector': 'app-list-consents'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SideNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/redecuers/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            consentsReducer\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        consentsReducer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        consentsReducer:         consentsReducer.ConsentsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         consentsReducer.ConsentsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport * as consentsReducer from '../redecuers/consents.reducer';\n\nexport interface State {\n    consentsReducer: consentsReducer.ConsentsState\n}\n\nexport const reducers: ActionReducerMap = {\n    consentsReducer: consentsReducer.consentsReducer\n}\n\nexport const metaReducers: MetaReducer[] = [];\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/DTO/ConsentsDTO.ts\n            \n            class\n            ConsentsDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/consents/consents-routing.module.ts\n            \n            variable\n            ConsentsRoutingModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/consents/give-consent/give-consent.component.ts\n            \n            component\n            GiveConsentComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/consents/list-consents/list-consents.component.ts\n            \n            component\n            ListConsentsComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/core/components/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/core/components/side-nav/side-nav.component.ts\n            \n            component\n            SideNavComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/controls/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/http-interceptors/index.ts\n            \n            variable\n            httpInterceptorProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/http-interceptors/mockHttpInterceptor.ts\n            \n            interceptor\n            MockHttpInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/consents.service.ts\n            \n            injectable\n            ConsentsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/consents.action.ts\n            \n            variable\n            AddConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/actions/consents.action.ts\n            \n            variable\n            AddConsentsFail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/actions/consents.action.ts\n            \n            variable\n            AddConsentsSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/actions/consents.action.ts\n            \n            variable\n            GetConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/actions/consents.action.ts\n            \n            variable\n            GetConsentsFail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/actions/consents.action.ts\n            \n            variable\n            GetConsentsSuccesss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/effects/consents.effect.ts\n            \n            injectable\n            ConsentsEffects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/effects/index.ts\n            \n            variable\n            effects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/redecuers/consents.reducer.ts\n            \n            interface\n            ConsentsState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/redecuers/consents.reducer.ts\n            \n            variable\n            consentsReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/redecuers/consents.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/redecuers/index.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/store/redecuers/index.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/redecuers/index.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/consents.selector.ts\n            \n            variable\n            consentsList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/consents.selector.ts\n            \n            variable\n            getConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.1.1\n        \n            @angular/cdk : ^12.2.13\n        \n            @angular/common : ~12.1.1\n        \n            @angular/compiler : ~12.1.1\n        \n            @angular/core : ~12.1.1\n        \n            @angular/forms : ~12.1.1\n        \n            @angular/localize : ~12.1.1\n        \n            @angular/material : ^12.2.13\n        \n            @angular/platform-browser : ~12.1.1\n        \n            @angular/platform-browser-dynamic : ~12.1.1\n        \n            @angular/router : ~12.1.1\n        \n            @ng-bootstrap/ng-bootstrap : ^10.0.0\n        \n            @ngrx/effects : ^13.0.1\n        \n            @ngrx/store : ^13.0.1\n        \n            @ngrx/store-devtools : ^13.0.1\n        \n            bootstrap : ^4.5.0\n        \n            rxjs : ^6.6.7\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConsentActionTypes   (src/.../consents.action.ts)\n                        \n                        \n                            ConsentsEnum   (src/.../consents.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/consents.action.ts\n    \n        \n            \n                \n                    \n                        \n                        ConsentActionTypes\n                    \n                \n                        \n                            \n                                 ADD_CONSENTS\n                            \n                        \n                        \n                            \n                                Value : [CMS] ADD_CONSENTS\n                            \n                        \n                        \n                            \n                                 ADD_CONSENTS_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [CMS] ADD_CONSENTS_SUCCESS\n                            \n                        \n                        \n                            \n                                 ADD_CONSENTS_FAIL\n                            \n                        \n                        \n                            \n                                Value : [CMS] ADD_CONSENTS_FAIL\n                            \n                        \n                        \n                            \n                                 GET_CONSENTS\n                            \n                        \n                        \n                            \n                                Value : [CMS] GET_CONSENTS\n                            \n                        \n                        \n                            \n                                 GET_CONSENTS_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [CMS] GET_CONSENTS_SUCCESS\n                            \n                        \n                        \n                            \n                                 GET_CONSENTS_FAIL\n                            \n                        \n                        \n                            \n                                Value : [CMS] GET_CONSENTS_FAIL\n                            \n                        \n            \n        \n\n    src/app/enums/consents.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ConsentsEnum\n                    \n                \n                        \n                            \n                                 AGGREMENT1\n                            \n                        \n                        \n                            \n                                Value : Receive newsletter\n                            \n                        \n                        \n                            \n                                 AGGREMENT2\n                            \n                        \n                        \n                            \n                                Value : Be shown targeted ads\n                            \n                        \n                        \n                            \n                                 AGGREMENT3\n                            \n                        \n                        \n                            \n                                Value : Contribute to anonymous visit statistics\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nConsent Management System\n1. Consent collection form\nA form that allows a user to enter her name, email address and to select data processes that she agrees to.\n\n2. Consent management\nA list of consents that were given by users. This view simply displays items from a list with client-side pagination.\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nHere is the list of unit test write down for this app.\n  ButtonComponent\n    √ should create\n  SideNavComponent\n    √ should create\n  GiveConsentComponent\n    √ should disable button if aggrement is not selected\n    √ should enable button if aggrement is selected\n    √ should submit the form\n    √ should create\n    √ should enable button if all aggrements are selected\n    √ name should be required field\n    √ email should be valid\n  ListConsentsComponent\n    √ should change page\n    √ should get next page\n    √ should get pagination data\n    √ should get previous page\n    √ should create\n  AppComponent\n    √ should have as title 'Consent Management System'\n    √ should create the app\n  PaginationComponent\n    √ should disable prev button\n    √ should get first page\n    √ should get second page\n    √ should disable next button\n    √ should get last page\n    √ should change page\n    √ should get fourth page\n    √ should get next page\n    √ should create\n    √ should get total pages\n    √ should get prev page\n\nFinished in 1.415 secs / 1.109 secs @ 14:20:35 GMT+0530 (India Standard Time)\n\nSUMMARY:\n√ 27 tests completed\n\n=============================== Coverage summary ===============================\nStatements   : 97.94% ( 143/146 )\nBranches     : 73.27% ( 85/116 )\nFunctions    : 93.75% ( 30/32 )\nLines        : 98.48% ( 130/132 )\n================================================================================\nRunning end-to-end tests (will add later on)\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ConsentsModule\n\n\n\ncluster_ConsentsModule_declarations\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nConsentsModule\n\nConsentsModule\n\nAppModule -->\n\nConsentsModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nConsentsModule -->\n\nCoreModule->ConsentsModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nCoreModule->ButtonComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nCoreModule->PaginationComponent \n\n\n\n\n\nSideNavComponent \n\nSideNavComponent \n\nSideNavComponent  -->\n\nCoreModule->SideNavComponent \n\n\n\n\n\nConsentsService\n\nConsentsService\n\nAppModule -->\n\nConsentsService->AppModule\n\n\n\n\n\nGiveConsentComponent\n\nGiveConsentComponent\n\nConsentsModule -->\n\nGiveConsentComponent->ConsentsModule\n\n\n\n\n\nListConsentsComponent\n\nListConsentsComponent\n\nConsentsModule -->\n\nListConsentsComponent->ConsentsModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nCoreModule -->\n\nButtonComponent->CoreModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nCoreModule -->\n\nPaginationComponent->CoreModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nCoreModule -->\n\nSideNavComponent->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        1 Route\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AddConsents   (src/.../consents.action.ts)\n                        \n                        \n                            AddConsentsFail   (src/.../consents.action.ts)\n                        \n                        \n                            AddConsentsSuccess   (src/.../consents.action.ts)\n                        \n                        \n                            consentsList   (src/.../consents.selector.ts)\n                        \n                        \n                            consentsReducer   (src/.../consents.reducer.ts)\n                        \n                        \n                            ConsentsRoutingModule   (src/.../consents-routing.module.ts)\n                        \n                        \n                            effects   (src/.../index.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            getConsents   (src/.../consents.selector.ts)\n                        \n                        \n                            GetConsents   (src/.../consents.action.ts)\n                        \n                        \n                            GetConsentsFail   (src/.../consents.action.ts)\n                        \n                        \n                            GetConsentsSuccesss   (src/.../consents.action.ts)\n                        \n                        \n                            httpInterceptorProviders   (src/.../index.ts)\n                        \n                        \n                            initialState   (src/.../consents.reducer.ts)\n                        \n                        \n                            metaReducers   (src/.../index.ts)\n                        \n                        \n                            reducers   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/consents.action.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AddConsents\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    ConsentActionTypes.ADD_CONSENTS,\n    props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AddConsentsFail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    ConsentActionTypes.ADD_CONSENTS_FAIL,\n    props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AddConsentsSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    ConsentActionTypes.ADD_CONSENTS_SUCCESS,\n    props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetConsents\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    ConsentActionTypes.GET_CONSENTS\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetConsentsFail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    ConsentActionTypes.GET_CONSENTS_FAIL,\n    props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetConsentsSuccesss\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n    ConsentActionTypes.GET_CONSENTS_SUCCESS,\n    props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/store/selectors/consents.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        consentsList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(\"consentsReducer\")\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConsents\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(consentsList, (state:ConsentsState) => state.consents)\n                    \n                \n\n\n        \n    \n\n    src/app/store/redecuers/consents.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        consentsReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n    initialState,\n    on(AddConsents, state => ({...state, loading: true}) ),\n    on(AddConsentsSuccess, state => ({...state, loading: false})),\n    on(AddConsentsFail, state => ({...state, loading: false })),\n    \n    on(GetConsents, state => ({...state, loading: true })),\n    on(GetConsentsSuccesss, (state,{ payload }) => ({...state, consents: payload, loading: false })),\n    on(GetConsentsFail, state => ({...state, loading: false }))\n    \n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConsentsState\n\n                    \n                \n                \n                    \n                        Default value : {\n    consents: [],\n    loading: false\n}\n                    \n                \n\n\n        \n    \n\n    src/app/consents/consents-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ConsentsRoutingModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RouterModule.forChild(routes)\n                    \n                \n\n\n        \n    \n\n    src/app/store/effects/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        effects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    ConsentsEffects\n]\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.dev.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    consentAPI: {\n      v1: '/v1/',    \n    }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  consentAPI: {\n    v1: '/v1/',    \n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  consentAPI: {\n    v1: '/v1/',    \n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/http-interceptors/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpInterceptorProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { provide: HTTP_INTERCEPTORS, useClass: MockHttpInterceptor, multi: true },\n  ]\n                    \n                \n\n\n        \n    \n\n    src/app/store/redecuers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        metaReducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MetaReducer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionReducerMap\n\n                    \n                \n                \n                    \n                        Default value : {\n    consentsReducer: consentsReducer.consentsReducer\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
